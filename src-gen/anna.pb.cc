// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: anna.proto

#include "anna.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_anna_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyAddressResponse_KeyAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyTuple;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyVersion_VectorClockEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MultiKeyCausalValue_VectorClockEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SingleKeyCausalValue_VectorClockEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_anna_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KeyVersion;
}  // namespace protobuf_anna_2eproto
class StringSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringSet>
      _instance;
} _StringSet_default_instance_;
class KeyVersion_VectorClockEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyVersion_VectorClockEntry_DoNotUse>
      _instance;
} _KeyVersion_VectorClockEntry_DoNotUse_default_instance_;
class KeyVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyVersion>
      _instance;
} _KeyVersion_default_instance_;
class KeyVersionListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyVersionList>
      _instance;
} _KeyVersionList_default_instance_;
class KeyTupleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyTuple>
      _instance;
} _KeyTuple_default_instance_;
class KeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyRequest>
      _instance;
} _KeyRequest_default_instance_;
class KeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyResponse>
      _instance;
} _KeyResponse_default_instance_;
class KeyAddressRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyAddressRequest>
      _instance;
} _KeyAddressRequest_default_instance_;
class KeyAddressResponse_KeyAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyAddressResponse_KeyAddress>
      _instance;
} _KeyAddressResponse_KeyAddress_default_instance_;
class KeyAddressResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyAddressResponse>
      _instance;
} _KeyAddressResponse_default_instance_;
class LWWValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LWWValue>
      _instance;
} _LWWValue_default_instance_;
class SetValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetValue>
      _instance;
} _SetValue_default_instance_;
class SingleKeyCausalValue_VectorClockEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleKeyCausalValue_VectorClockEntry_DoNotUse>
      _instance;
} _SingleKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_;
class SingleKeyCausalValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SingleKeyCausalValue>
      _instance;
} _SingleKeyCausalValue_default_instance_;
class MultiKeyCausalValue_VectorClockEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiKeyCausalValue_VectorClockEntry_DoNotUse>
      _instance;
} _MultiKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_;
class MultiKeyCausalValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiKeyCausalValue>
      _instance;
} _MultiKeyCausalValue_default_instance_;
class PriorityValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PriorityValue>
      _instance;
} _PriorityValue_default_instance_;
namespace protobuf_anna_2eproto {
static void InitDefaultsStringSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StringSet_default_instance_;
    new (ptr) ::StringSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StringSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringSet}, {}};

static void InitDefaultsKeyVersion_VectorClockEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyVersion_VectorClockEntry_DoNotUse_default_instance_;
    new (ptr) ::KeyVersion_VectorClockEntry_DoNotUse();
  }
  ::KeyVersion_VectorClockEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyVersion_VectorClockEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyVersion_VectorClockEntry_DoNotUse}, {}};

static void InitDefaultsKeyVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyVersion_default_instance_;
    new (ptr) ::KeyVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyVersion}, {
      &protobuf_anna_2eproto::scc_info_KeyVersion_VectorClockEntry_DoNotUse.base,}};

static void InitDefaultsKeyVersionList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyVersionList_default_instance_;
    new (ptr) ::KeyVersionList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyVersionList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyVersionList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyVersionList}, {
      &protobuf_anna_2eproto::scc_info_KeyVersion.base,}};

static void InitDefaultsKeyTuple() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyTuple_default_instance_;
    new (ptr) ::KeyTuple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyTuple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyTuple =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyTuple}, {}};

static void InitDefaultsKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyRequest_default_instance_;
    new (ptr) ::KeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyRequest}, {
      &protobuf_anna_2eproto::scc_info_KeyTuple.base,}};

static void InitDefaultsKeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyResponse_default_instance_;
    new (ptr) ::KeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyResponse}, {
      &protobuf_anna_2eproto::scc_info_KeyTuple.base,}};

static void InitDefaultsKeyAddressRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyAddressRequest_default_instance_;
    new (ptr) ::KeyAddressRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyAddressRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyAddressRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyAddressRequest}, {}};

static void InitDefaultsKeyAddressResponse_KeyAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyAddressResponse_KeyAddress_default_instance_;
    new (ptr) ::KeyAddressResponse_KeyAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyAddressResponse_KeyAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyAddressResponse_KeyAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyAddressResponse_KeyAddress}, {}};

static void InitDefaultsKeyAddressResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_KeyAddressResponse_default_instance_;
    new (ptr) ::KeyAddressResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyAddressResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyAddressResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyAddressResponse}, {
      &protobuf_anna_2eproto::scc_info_KeyAddressResponse_KeyAddress.base,}};

static void InitDefaultsLWWValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_LWWValue_default_instance_;
    new (ptr) ::LWWValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LWWValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LWWValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLWWValue}, {}};

static void InitDefaultsSetValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SetValue_default_instance_;
    new (ptr) ::SetValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SetValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetValue}, {}};

static void InitDefaultsSingleKeyCausalValue_VectorClockEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SingleKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_;
    new (ptr) ::SingleKeyCausalValue_VectorClockEntry_DoNotUse();
  }
  ::SingleKeyCausalValue_VectorClockEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SingleKeyCausalValue_VectorClockEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSingleKeyCausalValue_VectorClockEntry_DoNotUse}, {}};

static void InitDefaultsSingleKeyCausalValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SingleKeyCausalValue_default_instance_;
    new (ptr) ::SingleKeyCausalValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SingleKeyCausalValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SingleKeyCausalValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSingleKeyCausalValue}, {
      &protobuf_anna_2eproto::scc_info_SingleKeyCausalValue_VectorClockEntry_DoNotUse.base,}};

static void InitDefaultsMultiKeyCausalValue_VectorClockEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MultiKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_;
    new (ptr) ::MultiKeyCausalValue_VectorClockEntry_DoNotUse();
  }
  ::MultiKeyCausalValue_VectorClockEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MultiKeyCausalValue_VectorClockEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMultiKeyCausalValue_VectorClockEntry_DoNotUse}, {}};

static void InitDefaultsMultiKeyCausalValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MultiKeyCausalValue_default_instance_;
    new (ptr) ::MultiKeyCausalValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MultiKeyCausalValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MultiKeyCausalValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMultiKeyCausalValue}, {
      &protobuf_anna_2eproto::scc_info_MultiKeyCausalValue_VectorClockEntry_DoNotUse.base,
      &protobuf_anna_2eproto::scc_info_KeyVersion.base,}};

static void InitDefaultsPriorityValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PriorityValue_default_instance_;
    new (ptr) ::PriorityValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PriorityValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PriorityValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPriorityValue}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StringSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyVersion_VectorClockEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyVersionList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyTuple.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyAddressRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyAddressResponse_KeyAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyAddressResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LWWValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleKeyCausalValue_VectorClockEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SingleKeyCausalValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiKeyCausalValue_VectorClockEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MultiKeyCausalValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PriorityValue.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StringSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StringSet, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion_VectorClockEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion_VectorClockEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion_VectorClockEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion_VectorClockEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersion, vector_clock_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyVersionList, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, lattice_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, address_cache_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyTuple, invalidate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyRequest, tuples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyRequest, response_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyResponse, tuples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyResponse, response_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressRequest, response_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressRequest, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressRequest, request_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse_KeyAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse_KeyAddress, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse_KeyAddress, ips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse, addresses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyAddressResponse, response_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LWWValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LWWValue, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LWWValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SetValue, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue_VectorClockEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue_VectorClockEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue_VectorClockEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue_VectorClockEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue, vector_clock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SingleKeyCausalValue, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue_VectorClockEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue_VectorClockEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue_VectorClockEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue_VectorClockEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue, vector_clock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue, dependencies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MultiKeyCausalValue, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PriorityValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PriorityValue, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PriorityValue, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::StringSet)},
  { 6, 13, sizeof(::KeyVersion_VectorClockEntry_DoNotUse)},
  { 15, -1, sizeof(::KeyVersion)},
  { 22, -1, sizeof(::KeyVersionList)},
  { 28, -1, sizeof(::KeyTuple)},
  { 39, -1, sizeof(::KeyRequest)},
  { 48, -1, sizeof(::KeyResponse)},
  { 57, -1, sizeof(::KeyAddressRequest)},
  { 65, -1, sizeof(::KeyAddressResponse_KeyAddress)},
  { 72, -1, sizeof(::KeyAddressResponse)},
  { 80, -1, sizeof(::LWWValue)},
  { 87, -1, sizeof(::SetValue)},
  { 93, 100, sizeof(::SingleKeyCausalValue_VectorClockEntry_DoNotUse)},
  { 102, -1, sizeof(::SingleKeyCausalValue)},
  { 109, 116, sizeof(::MultiKeyCausalValue_VectorClockEntry_DoNotUse)},
  { 118, -1, sizeof(::MultiKeyCausalValue)},
  { 126, -1, sizeof(::PriorityValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StringSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyVersion_VectorClockEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyVersionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyTuple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyAddressResponse_KeyAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyAddressResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_LWWValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SetValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SingleKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SingleKeyCausalValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MultiKeyCausalValue_VectorClockEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MultiKeyCausalValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PriorityValue_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "anna.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nanna.proto\"\031\n\tStringSet\022\014\n\004keys\030\001 \003(\t\""
      "\201\001\n\nKeyVersion\022\013\n\003key\030\001 \001(\t\0222\n\014vector_cl"
      "ock\030\002 \003(\0132\034.KeyVersion.VectorClockEntry\032"
      "2\n\020VectorClockEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
      "e\030\002 \001(\r:\0028\001\"+\n\016KeyVersionList\022\031\n\004keys\030\001 "
      "\003(\0132\013.KeyVersion\"\227\001\n\010KeyTuple\022\013\n\003key\030\001 \001"
      "(\t\022\"\n\014lattice_type\030\002 \001(\0162\014.LatticeType\022\031"
      "\n\005error\030\003 \001(\0162\n.AnnaError\022\017\n\007payload\030\004 \001"
      "(\014\022\032\n\022address_cache_size\030\005 \001(\r\022\022\n\ninvali"
      "date\030\006 \001(\010\"q\n\nKeyRequest\022\032\n\004type\030\001 \001(\0162\014"
      ".RequestType\022\031\n\006tuples\030\002 \003(\0132\t.KeyTuple\022"
      "\030\n\020response_address\030\003 \001(\t\022\022\n\nrequest_id\030"
      "\004 \001(\t\"t\n\013KeyResponse\022\032\n\004type\030\001 \001(\0162\014.Req"
      "uestType\022\031\n\006tuples\030\002 \003(\0132\t.KeyTuple\022\023\n\013r"
      "esponse_id\030\003 \001(\t\022\031\n\005error\030\004 \001(\0162\n.AnnaEr"
      "ror\"O\n\021KeyAddressRequest\022\030\n\020response_add"
      "ress\030\001 \001(\t\022\014\n\004keys\030\002 \003(\t\022\022\n\nrequest_id\030\003"
      " \001(\t\"\237\001\n\022KeyAddressResponse\0221\n\taddresses"
      "\030\001 \003(\0132\036.KeyAddressResponse.KeyAddress\022\031"
      "\n\005error\030\002 \001(\0162\n.AnnaError\022\023\n\013response_id"
      "\030\003 \001(\t\032&\n\nKeyAddress\022\013\n\003key\030\001 \001(\t\022\013\n\003ips"
      "\030\002 \003(\t\",\n\010LWWValue\022\021\n\ttimestamp\030\001 \001(\004\022\r\n"
      "\005value\030\002 \001(\014\"\032\n\010SetValue\022\016\n\006values\030\001 \003(\014"
      "\"\230\001\n\024SingleKeyCausalValue\022<\n\014vector_cloc"
      "k\030\001 \003(\0132&.SingleKeyCausalValue.VectorClo"
      "ckEntry\022\016\n\006values\030\002 \003(\014\0322\n\020VectorClockEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\"\271\001\n\023"
      "MultiKeyCausalValue\022;\n\014vector_clock\030\001 \003("
      "\0132%.MultiKeyCausalValue.VectorClockEntry"
      "\022!\n\014dependencies\030\002 \003(\0132\013.KeyVersion\022\016\n\006v"
      "alues\030\003 \003(\014\0322\n\020VectorClockEntry\022\013\n\003key\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\"0\n\rPriorityValue"
      "\022\020\n\010priority\030\001 \001(\001\022\r\n\005value\030\002 \001(\014*3\n\013Req"
      "uestType\022\022\n\016RT_UNSPECIFIED\020\000\022\007\n\003GET\020\001\022\007\n"
      "\003PUT\020\002*m\n\013LatticeType\022\010\n\004NONE\020\000\022\007\n\003LWW\020\001"
      "\022\007\n\003SET\020\002\022\021\n\rSINGLE_CAUSAL\020\003\022\020\n\014MULTI_CA"
      "USAL\020\004\022\017\n\013ORDERED_SET\020\005\022\014\n\010PRIORITY\020\006*b\n"
      "\tAnnaError\022\014\n\010NO_ERROR\020\000\022\013\n\007KEY_DNE\020\001\022\020\n"
      "\014WRONG_THREAD\020\002\022\013\n\007TIMEOUT\020\003\022\013\n\007LATTICE\020"
      "\004\022\016\n\nNO_SERVERS\020\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1585);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "anna.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_anna_2eproto
const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_anna_2eproto::file_level_enum_descriptors[0];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LatticeType_descriptor() {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_anna_2eproto::file_level_enum_descriptors[1];
}
bool LatticeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AnnaError_descriptor() {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_anna_2eproto::file_level_enum_descriptors[2];
}
bool AnnaError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StringSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringSet::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringSet::StringSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_StringSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:StringSet)
}
StringSet::StringSet(const StringSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:StringSet)
}

void StringSet::SharedCtor() {
}

StringSet::~StringSet() {
  // @@protoc_insertion_point(destructor:StringSet)
  SharedDtor();
}

void StringSet::SharedDtor() {
}

void StringSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringSet::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringSet& StringSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_StringSet.base);
  return *internal_default_instance();
}


void StringSet::Clear() {
// @@protoc_insertion_point(message_clear_start:StringSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool StringSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StringSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "StringSet.keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StringSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StringSet)
  return false;
#undef DO_
}

void StringSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StringSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StringSet.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:StringSet)
}

::google::protobuf::uint8* StringSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StringSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "StringSet.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StringSet)
  return target;
}

size_t StringSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StringSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string keys = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StringSet)
  GOOGLE_DCHECK_NE(&from, this);
  const StringSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StringSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StringSet)
    MergeFrom(*source);
  }
}

void StringSet::MergeFrom(const StringSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StringSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void StringSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StringSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringSet::CopyFrom(const StringSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StringSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringSet::IsInitialized() const {
  return true;
}

void StringSet::Swap(StringSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringSet::InternalSwap(StringSet* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringSet::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

KeyVersion_VectorClockEntry_DoNotUse::KeyVersion_VectorClockEntry_DoNotUse() {}
KeyVersion_VectorClockEntry_DoNotUse::KeyVersion_VectorClockEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void KeyVersion_VectorClockEntry_DoNotUse::MergeFrom(const KeyVersion_VectorClockEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata KeyVersion_VectorClockEntry_DoNotUse::GetMetadata() const {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[1];
}
void KeyVersion_VectorClockEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void KeyVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyVersion::kKeyFieldNumber;
const int KeyVersion::kVectorClockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyVersion::KeyVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyVersion)
}
KeyVersion::KeyVersion(const KeyVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vector_clock_.MergeFrom(from.vector_clock_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:KeyVersion)
}

void KeyVersion::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyVersion::~KeyVersion() {
  // @@protoc_insertion_point(destructor:KeyVersion)
  SharedDtor();
}

void KeyVersion::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyVersion::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyVersion& KeyVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyVersion.base);
  return *internal_default_instance();
}


void KeyVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_clock_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyVersion.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> vector_clock = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          KeyVersion_VectorClockEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              KeyVersion_VectorClockEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&vector_clock_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyVersion.VectorClockEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyVersion)
  return false;
#undef DO_
}

void KeyVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyVersion.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // map<string, uint32> vector_clock = 2;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KeyVersion.VectorClockEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<KeyVersion_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<KeyVersion_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyVersion)
}

::google::protobuf::uint8* KeyVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyVersion.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // map<string, uint32> vector_clock = 2;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KeyVersion.VectorClockEntry.key");
      }
    };

    if (deterministic &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<KeyVersion_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<KeyVersion_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyVersion)
  return target;
}

size_t KeyVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> vector_clock = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vector_clock_size());
  {
    ::std::unique_ptr<KeyVersion_VectorClockEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->vector_clock().begin();
        it != this->vector_clock().end(); ++it) {
      entry.reset(vector_clock_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyVersion)
    MergeFrom(*source);
  }
}

void KeyVersion::MergeFrom(const KeyVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_clock_.MergeFrom(from.vector_clock_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void KeyVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyVersion::CopyFrom(const KeyVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyVersion::IsInitialized() const {
  return true;
}

void KeyVersion::Swap(KeyVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyVersion::InternalSwap(KeyVersion* other) {
  using std::swap;
  vector_clock_.Swap(&other->vector_clock_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyVersion::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyVersionList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyVersionList::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyVersionList::KeyVersionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyVersionList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyVersionList)
}
KeyVersionList::KeyVersionList(const KeyVersionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KeyVersionList)
}

void KeyVersionList::SharedCtor() {
}

KeyVersionList::~KeyVersionList() {
  // @@protoc_insertion_point(destructor:KeyVersionList)
  SharedDtor();
}

void KeyVersionList::SharedDtor() {
}

void KeyVersionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyVersionList::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyVersionList& KeyVersionList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyVersionList.base);
  return *internal_default_instance();
}


void KeyVersionList::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyVersionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool KeyVersionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyVersionList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyVersion keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyVersionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyVersionList)
  return false;
#undef DO_
}

void KeyVersionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyVersionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyVersion keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyVersionList)
}

::google::protobuf::uint8* KeyVersionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyVersionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyVersion keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyVersionList)
  return target;
}

size_t KeyVersionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyVersionList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KeyVersion keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyVersionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyVersionList)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyVersionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyVersionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyVersionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyVersionList)
    MergeFrom(*source);
  }
}

void KeyVersionList::MergeFrom(const KeyVersionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyVersionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void KeyVersionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyVersionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyVersionList::CopyFrom(const KeyVersionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyVersionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyVersionList::IsInitialized() const {
  return true;
}

void KeyVersionList::Swap(KeyVersionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyVersionList::InternalSwap(KeyVersionList* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyVersionList::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyTuple::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyTuple::kKeyFieldNumber;
const int KeyTuple::kLatticeTypeFieldNumber;
const int KeyTuple::kErrorFieldNumber;
const int KeyTuple::kPayloadFieldNumber;
const int KeyTuple::kAddressCacheSizeFieldNumber;
const int KeyTuple::kInvalidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyTuple::KeyTuple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyTuple.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyTuple)
}
KeyTuple::KeyTuple(const KeyTuple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  ::memcpy(&lattice_type_, &from.lattice_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&invalidate_) -
    reinterpret_cast<char*>(&lattice_type_)) + sizeof(invalidate_));
  // @@protoc_insertion_point(copy_constructor:KeyTuple)
}

void KeyTuple::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lattice_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invalidate_) -
      reinterpret_cast<char*>(&lattice_type_)) + sizeof(invalidate_));
}

KeyTuple::~KeyTuple() {
  // @@protoc_insertion_point(destructor:KeyTuple)
  SharedDtor();
}

void KeyTuple::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyTuple::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyTuple& KeyTuple::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyTuple.base);
  return *internal_default_instance();
}


void KeyTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyTuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lattice_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invalidate_) -
      reinterpret_cast<char*>(&lattice_type_)) + sizeof(invalidate_));
  _internal_metadata_.Clear();
}

bool KeyTuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyTuple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyTuple.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LatticeType lattice_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lattice_type(static_cast< ::LatticeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AnnaError error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::AnnaError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 address_cache_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &address_cache_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool invalidate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &invalidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyTuple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyTuple)
  return false;
#undef DO_
}

void KeyTuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyTuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyTuple.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .LatticeType lattice_type = 2;
  if (this->lattice_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->lattice_type(), output);
  }

  // .AnnaError error = 3;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->error(), output);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->payload(), output);
  }

  // uint32 address_cache_size = 5;
  if (this->address_cache_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->address_cache_size(), output);
  }

  // bool invalidate = 6;
  if (this->invalidate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->invalidate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyTuple)
}

::google::protobuf::uint8* KeyTuple::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyTuple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyTuple.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .LatticeType lattice_type = 2;
  if (this->lattice_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->lattice_type(), target);
  }

  // .AnnaError error = 3;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->error(), target);
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->payload(), target);
  }

  // uint32 address_cache_size = 5;
  if (this->address_cache_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->address_cache_size(), target);
  }

  // bool invalidate = 6;
  if (this->invalidate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->invalidate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyTuple)
  return target;
}

size_t KeyTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyTuple)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // bytes payload = 4;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  // .LatticeType lattice_type = 2;
  if (this->lattice_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lattice_type());
  }

  // .AnnaError error = 3;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  // uint32 address_cache_size = 5;
  if (this->address_cache_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->address_cache_size());
  }

  // bool invalidate = 6;
  if (this->invalidate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyTuple::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyTuple)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyTuple* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyTuple>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyTuple)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyTuple)
    MergeFrom(*source);
  }
}

void KeyTuple::MergeFrom(const KeyTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.lattice_type() != 0) {
    set_lattice_type(from.lattice_type());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.address_cache_size() != 0) {
    set_address_cache_size(from.address_cache_size());
  }
  if (from.invalidate() != 0) {
    set_invalidate(from.invalidate());
  }
}

void KeyTuple::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyTuple::CopyFrom(const KeyTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyTuple::IsInitialized() const {
  return true;
}

void KeyTuple::Swap(KeyTuple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyTuple::InternalSwap(KeyTuple* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lattice_type_, other->lattice_type_);
  swap(error_, other->error_);
  swap(address_cache_size_, other->address_cache_size_);
  swap(invalidate_, other->invalidate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyTuple::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyRequest::kTypeFieldNumber;
const int KeyRequest::kTuplesFieldNumber;
const int KeyRequest::kResponseAddressFieldNumber;
const int KeyRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyRequest::KeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyRequest)
}
KeyRequest::KeyRequest(const KeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_address().size() > 0) {
    response_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_address_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:KeyRequest)
}

void KeyRequest::SharedCtor() {
  response_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

KeyRequest::~KeyRequest() {
  // @@protoc_insertion_point(destructor:KeyRequest)
  SharedDtor();
}

void KeyRequest::SharedDtor() {
  response_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyRequest::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyRequest& KeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyRequest.base);
  return *internal_default_instance();
}


void KeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  response_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool KeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::RequestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyTuple tuples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_address().data(), static_cast<int>(this->response_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyRequest.response_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyRequest)
  return false;
#undef DO_
}

void KeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .KeyTuple tuples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tuples(static_cast<int>(i)),
      output);
  }

  // string response_address = 3;
  if (this->response_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_address().data(), static_cast<int>(this->response_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyRequest.response_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response_address(), output);
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyRequest)
}

::google::protobuf::uint8* KeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .KeyTuple tuples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tuples(static_cast<int>(i)), deterministic, target);
  }

  // string response_address = 3;
  if (this->response_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_address().data(), static_cast<int>(this->response_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyRequest.response_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response_address(), target);
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyRequest)
  return target;
}

size_t KeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KeyTuple tuples = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tuples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuples(static_cast<int>(i)));
    }
  }

  // string response_address = 3;
  if (this->response_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_address());
  }

  // string request_id = 4;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // .RequestType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyRequest)
    MergeFrom(*source);
  }
}

void KeyRequest::MergeFrom(const KeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
  if (from.response_address().size() > 0) {

    response_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_address_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void KeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyRequest::CopyFrom(const KeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyRequest::IsInitialized() const {
  return true;
}

void KeyRequest::Swap(KeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyRequest::InternalSwap(KeyRequest* other) {
  using std::swap;
  CastToBase(&tuples_)->InternalSwap(CastToBase(&other->tuples_));
  response_address_.Swap(&other->response_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyRequest::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyResponse::kTypeFieldNumber;
const int KeyResponse::kTuplesFieldNumber;
const int KeyResponse::kResponseIdFieldNumber;
const int KeyResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyResponse::KeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyResponse)
}
KeyResponse::KeyResponse(const KeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_id().size() > 0) {
    response_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&type_)) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:KeyResponse)
}

void KeyResponse::SharedCtor() {
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&type_)) + sizeof(error_));
}

KeyResponse::~KeyResponse() {
  // @@protoc_insertion_point(destructor:KeyResponse)
  SharedDtor();
}

void KeyResponse::SharedDtor() {
  response_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyResponse::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyResponse& KeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyResponse.base);
  return *internal_default_instance();
}


void KeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&type_)) + sizeof(error_));
  _internal_metadata_.Clear();
}

bool KeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .RequestType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::RequestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyTuple tuples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tuples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_id().data(), static_cast<int>(this->response_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyResponse.response_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AnnaError error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::AnnaError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyResponse)
  return false;
#undef DO_
}

void KeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .KeyTuple tuples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->tuples(static_cast<int>(i)),
      output);
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyResponse.response_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response_id(), output);
  }

  // .AnnaError error = 4;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyResponse)
}

::google::protobuf::uint8* KeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .RequestType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .KeyTuple tuples = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tuples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->tuples(static_cast<int>(i)), deterministic, target);
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyResponse.response_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response_id(), target);
  }

  // .AnnaError error = 4;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyResponse)
  return target;
}

size_t KeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KeyTuple tuples = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->tuples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tuples(static_cast<int>(i)));
    }
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_id());
  }

  // .RequestType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .AnnaError error = 4;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyResponse)
    MergeFrom(*source);
  }
}

void KeyResponse::MergeFrom(const KeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
  if (from.response_id().size() > 0) {

    response_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void KeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyResponse::CopyFrom(const KeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyResponse::IsInitialized() const {
  return true;
}

void KeyResponse::Swap(KeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyResponse::InternalSwap(KeyResponse* other) {
  using std::swap;
  CastToBase(&tuples_)->InternalSwap(CastToBase(&other->tuples_));
  response_id_.Swap(&other->response_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyResponse::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyAddressRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyAddressRequest::kResponseAddressFieldNumber;
const int KeyAddressRequest::kKeysFieldNumber;
const int KeyAddressRequest::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyAddressRequest::KeyAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyAddressRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyAddressRequest)
}
KeyAddressRequest::KeyAddressRequest(const KeyAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_address().size() > 0) {
    response_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_address_);
  }
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_id().size() > 0) {
    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  // @@protoc_insertion_point(copy_constructor:KeyAddressRequest)
}

void KeyAddressRequest::SharedCtor() {
  response_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyAddressRequest::~KeyAddressRequest() {
  // @@protoc_insertion_point(destructor:KeyAddressRequest)
  SharedDtor();
}

void KeyAddressRequest::SharedDtor() {
  response_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyAddressRequest::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyAddressRequest& KeyAddressRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyAddressRequest.base);
  return *internal_default_instance();
}


void KeyAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  response_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyAddressRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string response_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_address().data(), static_cast<int>(this->response_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressRequest.response_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressRequest.keys"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_id().data(), static_cast<int>(this->request_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressRequest.request_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyAddressRequest)
  return false;
#undef DO_
}

void KeyAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_address = 1;
  if (this->response_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_address().data(), static_cast<int>(this->response_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.response_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->response_address(), output);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->keys(i), output);
  }

  // string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->request_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyAddressRequest)
}

::google::protobuf::uint8* KeyAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string response_address = 1;
  if (this->response_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_address().data(), static_cast<int>(this->response_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.response_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->response_address(), target);
  }

  // repeated string keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->keys(i), target);
  }

  // string request_id = 3;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_id().data(), static_cast<int>(this->request_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressRequest.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->request_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyAddressRequest)
  return target;
}

size_t KeyAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyAddressRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  // string response_address = 1;
  if (this->response_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_address());
  }

  // string request_id = 3;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyAddressRequest)
    MergeFrom(*source);
  }
}

void KeyAddressRequest::MergeFrom(const KeyAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.response_address().size() > 0) {

    response_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_address_);
  }
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
}

void KeyAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyAddressRequest::CopyFrom(const KeyAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyAddressRequest::IsInitialized() const {
  return true;
}

void KeyAddressRequest::Swap(KeyAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyAddressRequest::InternalSwap(KeyAddressRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  response_address_.Swap(&other->response_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_id_.Swap(&other->request_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyAddressRequest::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyAddressResponse_KeyAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyAddressResponse_KeyAddress::kKeyFieldNumber;
const int KeyAddressResponse_KeyAddress::kIpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyAddressResponse_KeyAddress::KeyAddressResponse_KeyAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyAddressResponse_KeyAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyAddressResponse.KeyAddress)
}
KeyAddressResponse_KeyAddress::KeyAddressResponse_KeyAddress(const KeyAddressResponse_KeyAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ips_(from.ips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:KeyAddressResponse.KeyAddress)
}

void KeyAddressResponse_KeyAddress::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyAddressResponse_KeyAddress::~KeyAddressResponse_KeyAddress() {
  // @@protoc_insertion_point(destructor:KeyAddressResponse.KeyAddress)
  SharedDtor();
}

void KeyAddressResponse_KeyAddress::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyAddressResponse_KeyAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyAddressResponse_KeyAddress::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyAddressResponse_KeyAddress& KeyAddressResponse_KeyAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyAddressResponse_KeyAddress.base);
  return *internal_default_instance();
}


void KeyAddressResponse_KeyAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyAddressResponse.KeyAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ips_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyAddressResponse_KeyAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyAddressResponse.KeyAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressResponse.KeyAddress.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ips()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ips(this->ips_size() - 1).data(),
            static_cast<int>(this->ips(this->ips_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressResponse.KeyAddress.ips"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyAddressResponse.KeyAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyAddressResponse.KeyAddress)
  return false;
#undef DO_
}

void KeyAddressResponse_KeyAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyAddressResponse.KeyAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.KeyAddress.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // repeated string ips = 2;
  for (int i = 0, n = this->ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ips(i).data(), static_cast<int>(this->ips(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.KeyAddress.ips");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->ips(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyAddressResponse.KeyAddress)
}

::google::protobuf::uint8* KeyAddressResponse_KeyAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyAddressResponse.KeyAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.KeyAddress.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // repeated string ips = 2;
  for (int i = 0, n = this->ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ips(i).data(), static_cast<int>(this->ips(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.KeyAddress.ips");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->ips(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyAddressResponse.KeyAddress)
  return target;
}

size_t KeyAddressResponse_KeyAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyAddressResponse.KeyAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string ips = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ips_size());
  for (int i = 0, n = this->ips_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ips(i));
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyAddressResponse_KeyAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyAddressResponse.KeyAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyAddressResponse_KeyAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyAddressResponse_KeyAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyAddressResponse.KeyAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyAddressResponse.KeyAddress)
    MergeFrom(*source);
  }
}

void KeyAddressResponse_KeyAddress::MergeFrom(const KeyAddressResponse_KeyAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyAddressResponse.KeyAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ips_.MergeFrom(from.ips_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void KeyAddressResponse_KeyAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyAddressResponse.KeyAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyAddressResponse_KeyAddress::CopyFrom(const KeyAddressResponse_KeyAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyAddressResponse.KeyAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyAddressResponse_KeyAddress::IsInitialized() const {
  return true;
}

void KeyAddressResponse_KeyAddress::Swap(KeyAddressResponse_KeyAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyAddressResponse_KeyAddress::InternalSwap(KeyAddressResponse_KeyAddress* other) {
  using std::swap;
  ips_.InternalSwap(CastToBase(&other->ips_));
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyAddressResponse_KeyAddress::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyAddressResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyAddressResponse::kAddressesFieldNumber;
const int KeyAddressResponse::kErrorFieldNumber;
const int KeyAddressResponse::kResponseIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyAddressResponse::KeyAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_KeyAddressResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyAddressResponse)
}
KeyAddressResponse::KeyAddressResponse(const KeyAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      addresses_(from.addresses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_id().size() > 0) {
    response_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id_);
  }
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:KeyAddressResponse)
}

void KeyAddressResponse::SharedCtor() {
  response_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
}

KeyAddressResponse::~KeyAddressResponse() {
  // @@protoc_insertion_point(destructor:KeyAddressResponse)
  SharedDtor();
}

void KeyAddressResponse::SharedDtor() {
  response_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyAddressResponse::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyAddressResponse& KeyAddressResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_KeyAddressResponse.base);
  return *internal_default_instance();
}


void KeyAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addresses_.Clear();
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _internal_metadata_.Clear();
}

bool KeyAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyAddressResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyAddressResponse.KeyAddress addresses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_addresses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .AnnaError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::AnnaError >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_id().data(), static_cast<int>(this->response_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KeyAddressResponse.response_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyAddressResponse)
  return false;
#undef DO_
}

void KeyAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyAddressResponse.KeyAddress addresses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->addresses(static_cast<int>(i)),
      output);
  }

  // .AnnaError error = 2;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.response_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyAddressResponse)
}

::google::protobuf::uint8* KeyAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KeyAddressResponse.KeyAddress addresses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->addresses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->addresses(static_cast<int>(i)), deterministic, target);
  }

  // .AnnaError error = 2;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_id().data(), static_cast<int>(this->response_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "KeyAddressResponse.response_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyAddressResponse)
  return target;
}

size_t KeyAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyAddressResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KeyAddressResponse.KeyAddress addresses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->addresses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->addresses(static_cast<int>(i)));
    }
  }

  // string response_id = 3;
  if (this->response_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_id());
  }

  // .AnnaError error = 2;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyAddressResponse)
    MergeFrom(*source);
  }
}

void KeyAddressResponse::MergeFrom(const KeyAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  addresses_.MergeFrom(from.addresses_);
  if (from.response_id().size() > 0) {

    response_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_id_);
  }
  if (from.error() != 0) {
    set_error(from.error());
  }
}

void KeyAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyAddressResponse::CopyFrom(const KeyAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyAddressResponse::IsInitialized() const {
  return true;
}

void KeyAddressResponse::Swap(KeyAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyAddressResponse::InternalSwap(KeyAddressResponse* other) {
  using std::swap;
  CastToBase(&addresses_)->InternalSwap(CastToBase(&other->addresses_));
  response_id_.Swap(&other->response_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyAddressResponse::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LWWValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LWWValue::kTimestampFieldNumber;
const int LWWValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LWWValue::LWWValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_LWWValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LWWValue)
}
LWWValue::LWWValue(const LWWValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:LWWValue)
}

void LWWValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

LWWValue::~LWWValue() {
  // @@protoc_insertion_point(destructor:LWWValue)
  SharedDtor();
}

void LWWValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LWWValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LWWValue::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LWWValue& LWWValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_LWWValue.base);
  return *internal_default_instance();
}


void LWWValue::Clear() {
// @@protoc_insertion_point(message_clear_start:LWWValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool LWWValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LWWValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LWWValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LWWValue)
  return false;
#undef DO_
}

void LWWValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LWWValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LWWValue)
}

::google::protobuf::uint8* LWWValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LWWValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LWWValue)
  return target;
}

size_t LWWValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LWWValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LWWValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LWWValue)
  GOOGLE_DCHECK_NE(&from, this);
  const LWWValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LWWValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LWWValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LWWValue)
    MergeFrom(*source);
  }
}

void LWWValue::MergeFrom(const LWWValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LWWValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void LWWValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LWWValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LWWValue::CopyFrom(const LWWValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LWWValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LWWValue::IsInitialized() const {
  return true;
}

void LWWValue::Swap(LWWValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LWWValue::InternalSwap(LWWValue* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LWWValue::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetValue::SetValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_SetValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetValue)
}
SetValue::SetValue(const SetValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetValue)
}

void SetValue::SharedCtor() {
}

SetValue::~SetValue() {
  // @@protoc_insertion_point(destructor:SetValue)
  SharedDtor();
}

void SetValue::SharedDtor() {
}

void SetValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetValue::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetValue& SetValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_SetValue.base);
  return *internal_default_instance();
}


void SetValue::Clear() {
// @@protoc_insertion_point(message_clear_start:SetValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool SetValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetValue)
  return false;
#undef DO_
}

void SetValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SetValue)
}

::google::protobuf::uint8* SetValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetValue)
  return target;
}

size_t SetValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetValue)
  GOOGLE_DCHECK_NE(&from, this);
  const SetValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetValue)
    MergeFrom(*source);
  }
}

void SetValue::MergeFrom(const SetValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void SetValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetValue::CopyFrom(const SetValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetValue::IsInitialized() const {
  return true;
}

void SetValue::Swap(SetValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetValue::InternalSwap(SetValue* other) {
  using std::swap;
  values_.InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetValue::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

SingleKeyCausalValue_VectorClockEntry_DoNotUse::SingleKeyCausalValue_VectorClockEntry_DoNotUse() {}
SingleKeyCausalValue_VectorClockEntry_DoNotUse::SingleKeyCausalValue_VectorClockEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SingleKeyCausalValue_VectorClockEntry_DoNotUse::MergeFrom(const SingleKeyCausalValue_VectorClockEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SingleKeyCausalValue_VectorClockEntry_DoNotUse::GetMetadata() const {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[12];
}
void SingleKeyCausalValue_VectorClockEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SingleKeyCausalValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SingleKeyCausalValue::kVectorClockFieldNumber;
const int SingleKeyCausalValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SingleKeyCausalValue::SingleKeyCausalValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_SingleKeyCausalValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SingleKeyCausalValue)
}
SingleKeyCausalValue::SingleKeyCausalValue(const SingleKeyCausalValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vector_clock_.MergeFrom(from.vector_clock_);
  // @@protoc_insertion_point(copy_constructor:SingleKeyCausalValue)
}

void SingleKeyCausalValue::SharedCtor() {
}

SingleKeyCausalValue::~SingleKeyCausalValue() {
  // @@protoc_insertion_point(destructor:SingleKeyCausalValue)
  SharedDtor();
}

void SingleKeyCausalValue::SharedDtor() {
}

void SingleKeyCausalValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SingleKeyCausalValue::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SingleKeyCausalValue& SingleKeyCausalValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_SingleKeyCausalValue.base);
  return *internal_default_instance();
}


void SingleKeyCausalValue::Clear() {
// @@protoc_insertion_point(message_clear_start:SingleKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_clock_.Clear();
  values_.Clear();
  _internal_metadata_.Clear();
}

bool SingleKeyCausalValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SingleKeyCausalValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, uint32> vector_clock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          SingleKeyCausalValue_VectorClockEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SingleKeyCausalValue_VectorClockEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&vector_clock_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SingleKeyCausalValue.VectorClockEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes values = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SingleKeyCausalValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SingleKeyCausalValue)
  return false;
#undef DO_
}

void SingleKeyCausalValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SingleKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> vector_clock = 1;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SingleKeyCausalValue.VectorClockEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SingleKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SingleKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated bytes values = 2;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SingleKeyCausalValue)
}

::google::protobuf::uint8* SingleKeyCausalValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SingleKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> vector_clock = 1;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "SingleKeyCausalValue.VectorClockEntry.key");
      }
    };

    if (deterministic &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SingleKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<SingleKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated bytes values = 2;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SingleKeyCausalValue)
  return target;
}

size_t SingleKeyCausalValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SingleKeyCausalValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> vector_clock = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vector_clock_size());
  {
    ::std::unique_ptr<SingleKeyCausalValue_VectorClockEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->vector_clock().begin();
        it != this->vector_clock().end(); ++it) {
      entry.reset(vector_clock_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated bytes values = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SingleKeyCausalValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SingleKeyCausalValue)
  GOOGLE_DCHECK_NE(&from, this);
  const SingleKeyCausalValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SingleKeyCausalValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SingleKeyCausalValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SingleKeyCausalValue)
    MergeFrom(*source);
  }
}

void SingleKeyCausalValue::MergeFrom(const SingleKeyCausalValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SingleKeyCausalValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_clock_.MergeFrom(from.vector_clock_);
  values_.MergeFrom(from.values_);
}

void SingleKeyCausalValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SingleKeyCausalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleKeyCausalValue::CopyFrom(const SingleKeyCausalValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SingleKeyCausalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleKeyCausalValue::IsInitialized() const {
  return true;
}

void SingleKeyCausalValue::Swap(SingleKeyCausalValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SingleKeyCausalValue::InternalSwap(SingleKeyCausalValue* other) {
  using std::swap;
  vector_clock_.Swap(&other->vector_clock_);
  values_.InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SingleKeyCausalValue::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MultiKeyCausalValue_VectorClockEntry_DoNotUse::MultiKeyCausalValue_VectorClockEntry_DoNotUse() {}
MultiKeyCausalValue_VectorClockEntry_DoNotUse::MultiKeyCausalValue_VectorClockEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MultiKeyCausalValue_VectorClockEntry_DoNotUse::MergeFrom(const MultiKeyCausalValue_VectorClockEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MultiKeyCausalValue_VectorClockEntry_DoNotUse::GetMetadata() const {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[14];
}
void MultiKeyCausalValue_VectorClockEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void MultiKeyCausalValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiKeyCausalValue::kVectorClockFieldNumber;
const int MultiKeyCausalValue::kDependenciesFieldNumber;
const int MultiKeyCausalValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiKeyCausalValue::MultiKeyCausalValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_MultiKeyCausalValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MultiKeyCausalValue)
}
MultiKeyCausalValue::MultiKeyCausalValue(const MultiKeyCausalValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dependencies_(from.dependencies_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vector_clock_.MergeFrom(from.vector_clock_);
  // @@protoc_insertion_point(copy_constructor:MultiKeyCausalValue)
}

void MultiKeyCausalValue::SharedCtor() {
}

MultiKeyCausalValue::~MultiKeyCausalValue() {
  // @@protoc_insertion_point(destructor:MultiKeyCausalValue)
  SharedDtor();
}

void MultiKeyCausalValue::SharedDtor() {
}

void MultiKeyCausalValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MultiKeyCausalValue::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiKeyCausalValue& MultiKeyCausalValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_MultiKeyCausalValue.base);
  return *internal_default_instance();
}


void MultiKeyCausalValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MultiKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vector_clock_.Clear();
  dependencies_.Clear();
  values_.Clear();
  _internal_metadata_.Clear();
}

bool MultiKeyCausalValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MultiKeyCausalValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, uint32> vector_clock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MultiKeyCausalValue_VectorClockEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MultiKeyCausalValue_VectorClockEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&vector_clock_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MultiKeyCausalValue.VectorClockEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyVersion dependencies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dependencies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MultiKeyCausalValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MultiKeyCausalValue)
  return false;
#undef DO_
}

void MultiKeyCausalValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MultiKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> vector_clock = 1;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "MultiKeyCausalValue.VectorClockEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MultiKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MultiKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .KeyVersion dependencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dependencies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->dependencies(static_cast<int>(i)),
      output);
  }

  // repeated bytes values = 3;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MultiKeyCausalValue)
}

::google::protobuf::uint8* MultiKeyCausalValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MultiKeyCausalValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint32> vector_clock = 1;
  if (!this->vector_clock().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "MultiKeyCausalValue.VectorClockEntry.key");
      }
    };

    if (deterministic &&
        this->vector_clock().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->vector_clock().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MultiKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(vector_clock_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MultiKeyCausalValue_VectorClockEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->vector_clock().begin();
          it != this->vector_clock().end(); ++it) {
        entry.reset(vector_clock_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .KeyVersion dependencies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dependencies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->dependencies(static_cast<int>(i)), deterministic, target);
  }

  // repeated bytes values = 3;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MultiKeyCausalValue)
  return target;
}

size_t MultiKeyCausalValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MultiKeyCausalValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> vector_clock = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vector_clock_size());
  {
    ::std::unique_ptr<MultiKeyCausalValue_VectorClockEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->vector_clock().begin();
        it != this->vector_clock().end(); ++it) {
      entry.reset(vector_clock_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .KeyVersion dependencies = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dependencies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dependencies(static_cast<int>(i)));
    }
  }

  // repeated bytes values = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiKeyCausalValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MultiKeyCausalValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiKeyCausalValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiKeyCausalValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MultiKeyCausalValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MultiKeyCausalValue)
    MergeFrom(*source);
  }
}

void MultiKeyCausalValue::MergeFrom(const MultiKeyCausalValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MultiKeyCausalValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vector_clock_.MergeFrom(from.vector_clock_);
  dependencies_.MergeFrom(from.dependencies_);
  values_.MergeFrom(from.values_);
}

void MultiKeyCausalValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MultiKeyCausalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiKeyCausalValue::CopyFrom(const MultiKeyCausalValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MultiKeyCausalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiKeyCausalValue::IsInitialized() const {
  return true;
}

void MultiKeyCausalValue::Swap(MultiKeyCausalValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiKeyCausalValue::InternalSwap(MultiKeyCausalValue* other) {
  using std::swap;
  vector_clock_.Swap(&other->vector_clock_);
  CastToBase(&dependencies_)->InternalSwap(CastToBase(&other->dependencies_));
  values_.InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MultiKeyCausalValue::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PriorityValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriorityValue::kPriorityFieldNumber;
const int PriorityValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriorityValue::PriorityValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_anna_2eproto::scc_info_PriorityValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PriorityValue)
}
PriorityValue::PriorityValue(const PriorityValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:PriorityValue)
}

void PriorityValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = 0;
}

PriorityValue::~PriorityValue() {
  // @@protoc_insertion_point(destructor:PriorityValue)
  SharedDtor();
}

void PriorityValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PriorityValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PriorityValue::descriptor() {
  ::protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PriorityValue& PriorityValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_anna_2eproto::scc_info_PriorityValue.base);
  return *internal_default_instance();
}


void PriorityValue::Clear() {
// @@protoc_insertion_point(message_clear_start:PriorityValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  priority_ = 0;
  _internal_metadata_.Clear();
}

bool PriorityValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PriorityValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double priority = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PriorityValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PriorityValue)
  return false;
#undef DO_
}

void PriorityValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PriorityValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double priority = 1;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->priority(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PriorityValue)
}

::google::protobuf::uint8* PriorityValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PriorityValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double priority = 1;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->priority(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PriorityValue)
  return target;
}

size_t PriorityValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PriorityValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // double priority = 1;
  if (this->priority() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PriorityValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PriorityValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PriorityValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PriorityValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PriorityValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PriorityValue)
    MergeFrom(*source);
  }
}

void PriorityValue::MergeFrom(const PriorityValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PriorityValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void PriorityValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PriorityValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriorityValue::CopyFrom(const PriorityValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PriorityValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriorityValue::IsInitialized() const {
  return true;
}

void PriorityValue::Swap(PriorityValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriorityValue::InternalSwap(PriorityValue* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PriorityValue::GetMetadata() const {
  protobuf_anna_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_anna_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::StringSet* Arena::CreateMaybeMessage< ::StringSet >(Arena* arena) {
  return Arena::CreateInternal< ::StringSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyVersion_VectorClockEntry_DoNotUse* Arena::CreateMaybeMessage< ::KeyVersion_VectorClockEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KeyVersion_VectorClockEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyVersion* Arena::CreateMaybeMessage< ::KeyVersion >(Arena* arena) {
  return Arena::CreateInternal< ::KeyVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyVersionList* Arena::CreateMaybeMessage< ::KeyVersionList >(Arena* arena) {
  return Arena::CreateInternal< ::KeyVersionList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyTuple* Arena::CreateMaybeMessage< ::KeyTuple >(Arena* arena) {
  return Arena::CreateInternal< ::KeyTuple >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyRequest* Arena::CreateMaybeMessage< ::KeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::KeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyResponse* Arena::CreateMaybeMessage< ::KeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::KeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyAddressRequest* Arena::CreateMaybeMessage< ::KeyAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::KeyAddressRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyAddressResponse_KeyAddress* Arena::CreateMaybeMessage< ::KeyAddressResponse_KeyAddress >(Arena* arena) {
  return Arena::CreateInternal< ::KeyAddressResponse_KeyAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KeyAddressResponse* Arena::CreateMaybeMessage< ::KeyAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::KeyAddressResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LWWValue* Arena::CreateMaybeMessage< ::LWWValue >(Arena* arena) {
  return Arena::CreateInternal< ::LWWValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SetValue* Arena::CreateMaybeMessage< ::SetValue >(Arena* arena) {
  return Arena::CreateInternal< ::SetValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SingleKeyCausalValue_VectorClockEntry_DoNotUse* Arena::CreateMaybeMessage< ::SingleKeyCausalValue_VectorClockEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::SingleKeyCausalValue_VectorClockEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SingleKeyCausalValue* Arena::CreateMaybeMessage< ::SingleKeyCausalValue >(Arena* arena) {
  return Arena::CreateInternal< ::SingleKeyCausalValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MultiKeyCausalValue_VectorClockEntry_DoNotUse* Arena::CreateMaybeMessage< ::MultiKeyCausalValue_VectorClockEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::MultiKeyCausalValue_VectorClockEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MultiKeyCausalValue* Arena::CreateMaybeMessage< ::MultiKeyCausalValue >(Arena* arena) {
  return Arena::CreateInternal< ::MultiKeyCausalValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PriorityValue* Arena::CreateMaybeMessage< ::PriorityValue >(Arena* arena) {
  return Arena::CreateInternal< ::PriorityValue >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
