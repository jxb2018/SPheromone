// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operation.proto

#ifndef PROTOBUF_INCLUDED_operation_2eproto
#define PROTOBUF_INCLUDED_operation_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_operation_2eproto 

namespace protobuf_operation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_operation_2eproto
class AppRegistration;
class AppRegistrationDefaultTypeInternal;
extern AppRegistrationDefaultTypeInternal _AppRegistration_default_instance_;
class Argument;
class ArgumentDefaultTypeInternal;
extern ArgumentDefaultTypeInternal _Argument_default_instance_;
class BucketOperationRequest;
class BucketOperationRequestDefaultTypeInternal;
extern BucketOperationRequestDefaultTypeInternal _BucketOperationRequest_default_instance_;
class BucketOperationResponse;
class BucketOperationResponseDefaultTypeInternal;
extern BucketOperationResponseDefaultTypeInternal _BucketOperationResponse_default_instance_;
class ByBatchSizePrimitive;
class ByBatchSizePrimitiveDefaultTypeInternal;
extern ByBatchSizePrimitiveDefaultTypeInternal _ByBatchSizePrimitive_default_instance_;
class ByNamePrimitive;
class ByNamePrimitiveDefaultTypeInternal;
extern ByNamePrimitiveDefaultTypeInternal _ByNamePrimitive_default_instance_;
class BySetPrimitive;
class BySetPrimitiveDefaultTypeInternal;
extern BySetPrimitiveDefaultTypeInternal _BySetPrimitive_default_instance_;
class ByTimePrimitive;
class ByTimePrimitiveDefaultTypeInternal;
extern ByTimePrimitiveDefaultTypeInternal _ByTimePrimitive_default_instance_;
class CoordQuery;
class CoordQueryDefaultTypeInternal;
extern CoordQueryDefaultTypeInternal _CoordQuery_default_instance_;
class CoordResponse;
class CoordResponseDefaultTypeInternal;
extern CoordResponseDefaultTypeInternal _CoordResponse_default_instance_;
class CoordSync;
class CoordSyncDefaultTypeInternal;
extern CoordSyncDefaultTypeInternal _CoordSync_default_instance_;
class DataDependency;
class DataDependencyDefaultTypeInternal;
extern DataDependencyDefaultTypeInternal _DataDependency_default_instance_;
class DynamicGroupPrimitive;
class DynamicGroupPrimitiveDefaultTypeInternal;
extern DynamicGroupPrimitiveDefaultTypeInternal _DynamicGroupPrimitive_default_instance_;
class Function;
class FunctionDefaultTypeInternal;
extern FunctionDefaultTypeInternal _Function_default_instance_;
class FunctionCall;
class FunctionCallDefaultTypeInternal;
extern FunctionCallDefaultTypeInternal _FunctionCall_default_instance_;
class FunctionCallResponse;
class FunctionCallResponseDefaultTypeInternal;
extern FunctionCallResponseDefaultTypeInternal _FunctionCallResponse_default_instance_;
class FunctionRequest;
class FunctionRequestDefaultTypeInternal;
extern FunctionRequestDefaultTypeInternal _FunctionRequest_default_instance_;
class ImmediatePrimitive;
class ImmediatePrimitiveDefaultTypeInternal;
extern ImmediatePrimitiveDefaultTypeInternal _ImmediatePrimitive_default_instance_;
class RedundantPrimitive;
class RedundantPrimitiveDefaultTypeInternal;
extern RedundantPrimitiveDefaultTypeInternal _RedundantPrimitive_default_instance_;
class RerunHint;
class RerunHintDefaultTypeInternal;
extern RerunHintDefaultTypeInternal _RerunHint_default_instance_;
class TriggerEntity;
class TriggerEntityDefaultTypeInternal;
extern TriggerEntityDefaultTypeInternal _TriggerEntity_default_instance_;
class TriggerOperationRequest;
class TriggerOperationRequestDefaultTypeInternal;
extern TriggerOperationRequestDefaultTypeInternal _TriggerOperationRequest_default_instance_;
class TriggerOperationResponse;
class TriggerOperationResponseDefaultTypeInternal;
extern TriggerOperationResponseDefaultTypeInternal _TriggerOperationResponse_default_instance_;
class UpdateCoordMsg;
class UpdateCoordMsgDefaultTypeInternal;
extern UpdateCoordMsgDefaultTypeInternal _UpdateCoordMsg_default_instance_;
class UpdateStatusMessage;
class UpdateStatusMessageDefaultTypeInternal;
extern UpdateStatusMessageDefaultTypeInternal _UpdateStatusMessage_default_instance_;
namespace google {
namespace protobuf {
template<> ::AppRegistration* Arena::CreateMaybeMessage<::AppRegistration>(Arena*);
template<> ::Argument* Arena::CreateMaybeMessage<::Argument>(Arena*);
template<> ::BucketOperationRequest* Arena::CreateMaybeMessage<::BucketOperationRequest>(Arena*);
template<> ::BucketOperationResponse* Arena::CreateMaybeMessage<::BucketOperationResponse>(Arena*);
template<> ::ByBatchSizePrimitive* Arena::CreateMaybeMessage<::ByBatchSizePrimitive>(Arena*);
template<> ::ByNamePrimitive* Arena::CreateMaybeMessage<::ByNamePrimitive>(Arena*);
template<> ::BySetPrimitive* Arena::CreateMaybeMessage<::BySetPrimitive>(Arena*);
template<> ::ByTimePrimitive* Arena::CreateMaybeMessage<::ByTimePrimitive>(Arena*);
template<> ::CoordQuery* Arena::CreateMaybeMessage<::CoordQuery>(Arena*);
template<> ::CoordResponse* Arena::CreateMaybeMessage<::CoordResponse>(Arena*);
template<> ::CoordSync* Arena::CreateMaybeMessage<::CoordSync>(Arena*);
template<> ::DataDependency* Arena::CreateMaybeMessage<::DataDependency>(Arena*);
template<> ::DynamicGroupPrimitive* Arena::CreateMaybeMessage<::DynamicGroupPrimitive>(Arena*);
template<> ::Function* Arena::CreateMaybeMessage<::Function>(Arena*);
template<> ::FunctionCall* Arena::CreateMaybeMessage<::FunctionCall>(Arena*);
template<> ::FunctionCallResponse* Arena::CreateMaybeMessage<::FunctionCallResponse>(Arena*);
template<> ::FunctionRequest* Arena::CreateMaybeMessage<::FunctionRequest>(Arena*);
template<> ::ImmediatePrimitive* Arena::CreateMaybeMessage<::ImmediatePrimitive>(Arena*);
template<> ::RedundantPrimitive* Arena::CreateMaybeMessage<::RedundantPrimitive>(Arena*);
template<> ::RerunHint* Arena::CreateMaybeMessage<::RerunHint>(Arena*);
template<> ::TriggerEntity* Arena::CreateMaybeMessage<::TriggerEntity>(Arena*);
template<> ::TriggerOperationRequest* Arena::CreateMaybeMessage<::TriggerOperationRequest>(Arena*);
template<> ::TriggerOperationResponse* Arena::CreateMaybeMessage<::TriggerOperationResponse>(Arena*);
template<> ::UpdateCoordMsg* Arena::CreateMaybeMessage<::UpdateCoordMsg>(Arena*);
template<> ::UpdateStatusMessage* Arena::CreateMaybeMessage<::UpdateStatusMessage>(Arena*);
}  // namespace protobuf
}  // namespace google

enum FunctionLang {
  CPP = 0,
  PYTHON = 1,
  FunctionLang_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FunctionLang_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FunctionLang_IsValid(int value);
const FunctionLang FunctionLang_MIN = CPP;
const FunctionLang FunctionLang_MAX = PYTHON;
const int FunctionLang_ARRAYSIZE = FunctionLang_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionLang_descriptor();
inline const ::std::string& FunctionLang_Name(FunctionLang value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionLang_descriptor(), value);
}
inline bool FunctionLang_Parse(
    const ::std::string& name, FunctionLang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionLang>(
    FunctionLang_descriptor(), name, value);
}
enum DependencyType {
  DIRECT = 0,
  MANY_TO_ONE = 1,
  K_OUT_OF_N = 2,
  PERIODIC = 3,
  DependencyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DependencyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DependencyType_IsValid(int value);
const DependencyType DependencyType_MIN = DIRECT;
const DependencyType DependencyType_MAX = PERIODIC;
const int DependencyType_ARRAYSIZE = DependencyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DependencyType_descriptor();
inline const ::std::string& DependencyType_Name(DependencyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DependencyType_descriptor(), value);
}
inline bool DependencyType_Parse(
    const ::std::string& name, DependencyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DependencyType>(
    DependencyType_descriptor(), name, value);
}
enum BucketOperationType {
  CREATE_BUCKET = 0,
  DELETE_BUCKET = 1,
  BucketOperationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BucketOperationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BucketOperationType_IsValid(int value);
const BucketOperationType BucketOperationType_MIN = CREATE_BUCKET;
const BucketOperationType BucketOperationType_MAX = DELETE_BUCKET;
const int BucketOperationType_ARRAYSIZE = BucketOperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BucketOperationType_descriptor();
inline const ::std::string& BucketOperationType_Name(BucketOperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BucketOperationType_descriptor(), value);
}
inline bool BucketOperationType_Parse(
    const ::std::string& name, BucketOperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BucketOperationType>(
    BucketOperationType_descriptor(), name, value);
}
enum TriggerOperationType {
  ADD_TRIGGER = 0,
  DELETE_TRIGGER = 1,
  TriggerOperationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TriggerOperationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TriggerOperationType_IsValid(int value);
const TriggerOperationType TriggerOperationType_MIN = ADD_TRIGGER;
const TriggerOperationType TriggerOperationType_MAX = DELETE_TRIGGER;
const int TriggerOperationType_ARRAYSIZE = TriggerOperationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TriggerOperationType_descriptor();
inline const ::std::string& TriggerOperationType_Name(TriggerOperationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerOperationType_descriptor(), value);
}
inline bool TriggerOperationType_Parse(
    const ::std::string& name, TriggerOperationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerOperationType>(
    TriggerOperationType_descriptor(), name, value);
}
enum PrimitiveType {
  IMMEDIATE = 0,
  BY_NAME = 1,
  BY_BATCH_SIZE = 2,
  BY_SET = 3,
  DYNAMIC_GROUP = 4,
  REDUNDANT = 5,
  BY_TIME = 6,
  PrimitiveType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PrimitiveType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PrimitiveType_IsValid(int value);
const PrimitiveType PrimitiveType_MIN = IMMEDIATE;
const PrimitiveType PrimitiveType_MAX = BY_TIME;
const int PrimitiveType_ARRAYSIZE = PrimitiveType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrimitiveType_descriptor();
inline const ::std::string& PrimitiveType_Name(PrimitiveType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrimitiveType_descriptor(), value);
}
inline bool PrimitiveType_Parse(
    const ::std::string& name, PrimitiveType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrimitiveType>(
    PrimitiveType_descriptor(), name, value);
}
// ===================================================================

class Function : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Function) */ {
 public:
  Function();
  virtual ~Function();

  Function(const Function& from);

  inline Function& operator=(const Function& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Function(Function&& from) noexcept
    : Function() {
    *this = ::std::move(from);
  }

  inline Function& operator=(Function&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Function& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Function* internal_default_instance() {
    return reinterpret_cast<const Function*>(
               &_Function_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Function* other);
  friend void swap(Function& a, Function& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Function* New() const final {
    return CreateMaybeMessage<Function>(NULL);
  }

  Function* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Function>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Function& from);
  void MergeFrom(const Function& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Function* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // .FunctionLang lang = 2;
  void clear_lang();
  static const int kLangFieldNumber = 2;
  ::FunctionLang lang() const;
  void set_lang(::FunctionLang value);

  // @@protoc_insertion_point(class_scope:Function)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  int lang_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataDependency : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataDependency) */ {
 public:
  DataDependency();
  virtual ~DataDependency();

  DataDependency(const DataDependency& from);

  inline DataDependency& operator=(const DataDependency& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataDependency(DataDependency&& from) noexcept
    : DataDependency() {
    *this = ::std::move(from);
  }

  inline DataDependency& operator=(DataDependency&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataDependency& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataDependency* internal_default_instance() {
    return reinterpret_cast<const DataDependency*>(
               &_DataDependency_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DataDependency* other);
  friend void swap(DataDependency& a, DataDependency& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataDependency* New() const final {
    return CreateMaybeMessage<DataDependency>(NULL);
  }

  DataDependency* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DataDependency>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DataDependency& from);
  void MergeFrom(const DataDependency& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataDependency* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string src_functions = 2;
  int src_functions_size() const;
  void clear_src_functions();
  static const int kSrcFunctionsFieldNumber = 2;
  const ::std::string& src_functions(int index) const;
  ::std::string* mutable_src_functions(int index);
  void set_src_functions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_src_functions(int index, ::std::string&& value);
  #endif
  void set_src_functions(int index, const char* value);
  void set_src_functions(int index, const char* value, size_t size);
  ::std::string* add_src_functions();
  void add_src_functions(const ::std::string& value);
  #if LANG_CXX11
  void add_src_functions(::std::string&& value);
  #endif
  void add_src_functions(const char* value);
  void add_src_functions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& src_functions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_src_functions();

  // repeated string tgt_functions = 3;
  int tgt_functions_size() const;
  void clear_tgt_functions();
  static const int kTgtFunctionsFieldNumber = 3;
  const ::std::string& tgt_functions(int index) const;
  ::std::string* mutable_tgt_functions(int index);
  void set_tgt_functions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_tgt_functions(int index, ::std::string&& value);
  #endif
  void set_tgt_functions(int index, const char* value);
  void set_tgt_functions(int index, const char* value, size_t size);
  ::std::string* add_tgt_functions();
  void add_tgt_functions(const ::std::string& value);
  #if LANG_CXX11
  void add_tgt_functions(::std::string&& value);
  #endif
  void add_tgt_functions(const char* value);
  void add_tgt_functions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& tgt_functions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_tgt_functions();

  // bytes description = 4;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .DependencyType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::DependencyType type() const;
  void set_type(::DependencyType value);

  // @@protoc_insertion_point(class_scope:DataDependency)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> src_functions_;
  ::google::protobuf::RepeatedPtrField< ::std::string> tgt_functions_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppRegistration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AppRegistration) */ {
 public:
  AppRegistration();
  virtual ~AppRegistration();

  AppRegistration(const AppRegistration& from);

  inline AppRegistration& operator=(const AppRegistration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AppRegistration(AppRegistration&& from) noexcept
    : AppRegistration() {
    *this = ::std::move(from);
  }

  inline AppRegistration& operator=(AppRegistration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppRegistration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AppRegistration* internal_default_instance() {
    return reinterpret_cast<const AppRegistration*>(
               &_AppRegistration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AppRegistration* other);
  friend void swap(AppRegistration& a, AppRegistration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AppRegistration* New() const final {
    return CreateMaybeMessage<AppRegistration>(NULL);
  }

  AppRegistration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AppRegistration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AppRegistration& from);
  void MergeFrom(const AppRegistration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AppRegistration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string functions = 2;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 2;
  const ::std::string& functions(int index) const;
  ::std::string* mutable_functions(int index);
  void set_functions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_functions(int index, ::std::string&& value);
  #endif
  void set_functions(int index, const char* value);
  void set_functions(int index, const char* value, size_t size);
  ::std::string* add_functions();
  void add_functions(const ::std::string& value);
  #if LANG_CXX11
  void add_functions(::std::string&& value);
  #endif
  void add_functions(const char* value);
  void add_functions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& functions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_functions();

  // repeated .DataDependency dependencies = 3;
  int dependencies_size() const;
  void clear_dependencies();
  static const int kDependenciesFieldNumber = 3;
  ::DataDependency* mutable_dependencies(int index);
  ::google::protobuf::RepeatedPtrField< ::DataDependency >*
      mutable_dependencies();
  const ::DataDependency& dependencies(int index) const;
  ::DataDependency* add_dependencies();
  const ::google::protobuf::RepeatedPtrField< ::DataDependency >&
      dependencies() const;

  // string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // @@protoc_insertion_point(class_scope:AppRegistration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> functions_;
  ::google::protobuf::RepeatedPtrField< ::DataDependency > dependencies_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Argument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Argument) */ {
 public:
  Argument();
  virtual ~Argument();

  Argument(const Argument& from);

  inline Argument& operator=(const Argument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Argument(Argument&& from) noexcept
    : Argument() {
    *this = ::std::move(from);
  }

  inline Argument& operator=(Argument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Argument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Argument* internal_default_instance() {
    return reinterpret_cast<const Argument*>(
               &_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Argument* other);
  friend void swap(Argument& a, Argument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Argument* New() const final {
    return CreateMaybeMessage<Argument>(NULL);
  }

  Argument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Argument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Argument& from);
  void MergeFrom(const Argument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Argument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes body = 1;
  void clear_body();
  static const int kBodyFieldNumber = 1;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // string data_address = 3;
  void clear_data_address();
  static const int kDataAddressFieldNumber = 3;
  const ::std::string& data_address() const;
  void set_data_address(const ::std::string& value);
  #if LANG_CXX11
  void set_data_address(::std::string&& value);
  #endif
  void set_data_address(const char* value);
  void set_data_address(const char* value, size_t size);
  ::std::string* mutable_data_address();
  ::std::string* release_data_address();
  void set_allocated_data_address(::std::string* data_address);

  // uint32 arg_flag = 2;
  void clear_arg_flag();
  static const int kArgFlagFieldNumber = 2;
  ::google::protobuf::uint32 arg_flag() const;
  void set_arg_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Argument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr data_address_;
  ::google::protobuf::uint32 arg_flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FunctionRequest) */ {
 public:
  FunctionRequest();
  virtual ~FunctionRequest();

  FunctionRequest(const FunctionRequest& from);

  inline FunctionRequest& operator=(const FunctionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionRequest(FunctionRequest&& from) noexcept
    : FunctionRequest() {
    *this = ::std::move(from);
  }

  inline FunctionRequest& operator=(FunctionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionRequest* internal_default_instance() {
    return reinterpret_cast<const FunctionRequest*>(
               &_FunctionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(FunctionRequest* other);
  friend void swap(FunctionRequest& a, FunctionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionRequest* New() const final {
    return CreateMaybeMessage<FunctionRequest>(NULL);
  }

  FunctionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionRequest& from);
  void MergeFrom(const FunctionRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Argument arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::Argument >*
      mutable_arguments();
  const ::Argument& arguments(int index) const;
  ::Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::Argument >&
      arguments() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:FunctionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Argument > arguments_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FunctionCall) */ {
 public:
  FunctionCall();
  virtual ~FunctionCall();

  FunctionCall(const FunctionCall& from);

  inline FunctionCall& operator=(const FunctionCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionCall(FunctionCall&& from) noexcept
    : FunctionCall() {
    *this = ::std::move(from);
  }

  inline FunctionCall& operator=(FunctionCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionCall& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionCall* internal_default_instance() {
    return reinterpret_cast<const FunctionCall*>(
               &_FunctionCall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(FunctionCall* other);
  friend void swap(FunctionCall& a, FunctionCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionCall* New() const final {
    return CreateMaybeMessage<FunctionCall>(NULL);
  }

  FunctionCall* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionCall>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionCall& from);
  void MergeFrom(const FunctionCall& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FunctionRequest requests = 2;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 2;
  ::FunctionRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::FunctionRequest >*
      mutable_requests();
  const ::FunctionRequest& requests(int index) const;
  ::FunctionRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::FunctionRequest >&
      requests() const;

  // string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string source = 3;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // string request_id = 4;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 4;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string resp_address = 5;
  void clear_resp_address();
  static const int kRespAddressFieldNumber = 5;
  const ::std::string& resp_address() const;
  void set_resp_address(const ::std::string& value);
  #if LANG_CXX11
  void set_resp_address(::std::string&& value);
  #endif
  void set_resp_address(const char* value);
  void set_resp_address(const char* value, size_t size);
  ::std::string* mutable_resp_address();
  ::std::string* release_resp_address();
  void set_allocated_resp_address(::std::string* resp_address);

  // string session_id = 6;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 6;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // bool sync_data_status = 7;
  void clear_sync_data_status();
  static const int kSyncDataStatusFieldNumber = 7;
  bool sync_data_status() const;
  void set_sync_data_status(bool value);

  // @@protoc_insertion_point(class_scope:FunctionCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::FunctionRequest > requests_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr resp_address_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  bool sync_data_status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionCallResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FunctionCallResponse) */ {
 public:
  FunctionCallResponse();
  virtual ~FunctionCallResponse();

  FunctionCallResponse(const FunctionCallResponse& from);

  inline FunctionCallResponse& operator=(const FunctionCallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionCallResponse(FunctionCallResponse&& from) noexcept
    : FunctionCallResponse() {
    *this = ::std::move(from);
  }

  inline FunctionCallResponse& operator=(FunctionCallResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionCallResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionCallResponse* internal_default_instance() {
    return reinterpret_cast<const FunctionCallResponse*>(
               &_FunctionCallResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(FunctionCallResponse* other);
  friend void swap(FunctionCallResponse& a, FunctionCallResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionCallResponse* New() const final {
    return CreateMaybeMessage<FunctionCallResponse>(NULL);
  }

  FunctionCallResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionCallResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionCallResponse& from);
  void MergeFrom(const FunctionCallResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionCallResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_name = 1;
  void clear_app_name();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // bytes output = 3;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  #if LANG_CXX11
  void set_output(::std::string&& value);
  #endif
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // uint32 error_no = 4;
  void clear_error_no();
  static const int kErrorNoFieldNumber = 4;
  ::google::protobuf::uint32 error_no() const;
  void set_error_no(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FunctionCallResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::uint32 error_no_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoordSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CoordSync) */ {
 public:
  CoordSync();
  virtual ~CoordSync();

  CoordSync(const CoordSync& from);

  inline CoordSync& operator=(const CoordSync& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoordSync(CoordSync&& from) noexcept
    : CoordSync() {
    *this = ::std::move(from);
  }

  inline CoordSync& operator=(CoordSync&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordSync& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoordSync* internal_default_instance() {
    return reinterpret_cast<const CoordSync*>(
               &_CoordSync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CoordSync* other);
  friend void swap(CoordSync& a, CoordSync& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoordSync* New() const final {
    return CreateMaybeMessage<CoordSync>(NULL);
  }

  CoordSync* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoordSync>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoordSync& from);
  void MergeFrom(const CoordSync& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoordSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string public_ip = 1;
  void clear_public_ip();
  static const int kPublicIpFieldNumber = 1;
  const ::std::string& public_ip() const;
  void set_public_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_public_ip(::std::string&& value);
  #endif
  void set_public_ip(const char* value);
  void set_public_ip(const char* value, size_t size);
  ::std::string* mutable_public_ip();
  ::std::string* release_public_ip();
  void set_allocated_public_ip(::std::string* public_ip);

  // string private_ip = 2;
  void clear_private_ip();
  static const int kPrivateIpFieldNumber = 2;
  const ::std::string& private_ip() const;
  void set_private_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_private_ip(::std::string&& value);
  #endif
  void set_private_ip(const char* value);
  void set_private_ip(const char* value, size_t size);
  ::std::string* mutable_private_ip();
  ::std::string* release_private_ip();
  void set_allocated_private_ip(::std::string* private_ip);

  // uint32 thread_id = 3;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 3;
  ::google::protobuf::uint32 thread_id() const;
  void set_thread_id(::google::protobuf::uint32 value);

  // uint32 workload = 4;
  void clear_workload();
  static const int kWorkloadFieldNumber = 4;
  ::google::protobuf::uint32 workload() const;
  void set_workload(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CoordSync)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr public_ip_;
  ::google::protobuf::internal::ArenaStringPtr private_ip_;
  ::google::protobuf::uint32 thread_id_;
  ::google::protobuf::uint32 workload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoordQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CoordQuery) */ {
 public:
  CoordQuery();
  virtual ~CoordQuery();

  CoordQuery(const CoordQuery& from);

  inline CoordQuery& operator=(const CoordQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoordQuery(CoordQuery&& from) noexcept
    : CoordQuery() {
    *this = ::std::move(from);
  }

  inline CoordQuery& operator=(CoordQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordQuery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoordQuery* internal_default_instance() {
    return reinterpret_cast<const CoordQuery*>(
               &_CoordQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(CoordQuery* other);
  friend void swap(CoordQuery& a, CoordQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoordQuery* New() const final {
    return CreateMaybeMessage<CoordQuery>(NULL);
  }

  CoordQuery* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoordQuery>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoordQuery& from);
  void MergeFrom(const CoordQuery& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoordQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string application = 1;
  void clear_application();
  static const int kApplicationFieldNumber = 1;
  const ::std::string& application() const;
  void set_application(const ::std::string& value);
  #if LANG_CXX11
  void set_application(::std::string&& value);
  #endif
  void set_application(const char* value);
  void set_application(const char* value, size_t size);
  ::std::string* mutable_application();
  ::std::string* release_application();
  void set_allocated_application(::std::string* application);

  // string request_id = 2;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // @@protoc_insertion_point(class_scope:CoordQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr application_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CoordResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CoordResponse) */ {
 public:
  CoordResponse();
  virtual ~CoordResponse();

  CoordResponse(const CoordResponse& from);

  inline CoordResponse& operator=(const CoordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CoordResponse(CoordResponse&& from) noexcept
    : CoordResponse() {
    *this = ::std::move(from);
  }

  inline CoordResponse& operator=(CoordResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CoordResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CoordResponse* internal_default_instance() {
    return reinterpret_cast<const CoordResponse*>(
               &_CoordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(CoordResponse* other);
  friend void swap(CoordResponse& a, CoordResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CoordResponse* New() const final {
    return CreateMaybeMessage<CoordResponse>(NULL);
  }

  CoordResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CoordResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CoordResponse& from);
  void MergeFrom(const CoordResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CoordResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string coord_ip = 1;
  void clear_coord_ip();
  static const int kCoordIpFieldNumber = 1;
  const ::std::string& coord_ip() const;
  void set_coord_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_coord_ip(::std::string&& value);
  #endif
  void set_coord_ip(const char* value);
  void set_coord_ip(const char* value, size_t size);
  ::std::string* mutable_coord_ip();
  ::std::string* release_coord_ip();
  void set_allocated_coord_ip(::std::string* coord_ip);

  // string request_id = 3;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // uint32 thread_id = 2;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 2;
  ::google::protobuf::uint32 thread_id() const;
  void set_thread_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CoordResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr coord_ip_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::uint32 thread_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BucketOperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BucketOperationRequest) */ {
 public:
  BucketOperationRequest();
  virtual ~BucketOperationRequest();

  BucketOperationRequest(const BucketOperationRequest& from);

  inline BucketOperationRequest& operator=(const BucketOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BucketOperationRequest(BucketOperationRequest&& from) noexcept
    : BucketOperationRequest() {
    *this = ::std::move(from);
  }

  inline BucketOperationRequest& operator=(BucketOperationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BucketOperationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BucketOperationRequest* internal_default_instance() {
    return reinterpret_cast<const BucketOperationRequest*>(
               &_BucketOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(BucketOperationRequest* other);
  friend void swap(BucketOperationRequest& a, BucketOperationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BucketOperationRequest* New() const final {
    return CreateMaybeMessage<BucketOperationRequest>(NULL);
  }

  BucketOperationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BucketOperationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BucketOperationRequest& from);
  void MergeFrom(const BucketOperationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BucketOperationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_name = 2;
  void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string bucket_name = 3;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 3;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);

  // string request_id = 4;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 4;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string response_address = 5;
  void clear_response_address();
  static const int kResponseAddressFieldNumber = 5;
  const ::std::string& response_address() const;
  void set_response_address(const ::std::string& value);
  #if LANG_CXX11
  void set_response_address(::std::string&& value);
  #endif
  void set_response_address(const char* value);
  void set_response_address(const char* value, size_t size);
  ::std::string* mutable_response_address();
  ::std::string* release_response_address();
  void set_allocated_response_address(::std::string* response_address);

  // .BucketOperationType operation_type = 1;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 1;
  ::BucketOperationType operation_type() const;
  void set_operation_type(::BucketOperationType value);

  // @@protoc_insertion_point(class_scope:BucketOperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr response_address_;
  int operation_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BucketOperationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BucketOperationResponse) */ {
 public:
  BucketOperationResponse();
  virtual ~BucketOperationResponse();

  BucketOperationResponse(const BucketOperationResponse& from);

  inline BucketOperationResponse& operator=(const BucketOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BucketOperationResponse(BucketOperationResponse&& from) noexcept
    : BucketOperationResponse() {
    *this = ::std::move(from);
  }

  inline BucketOperationResponse& operator=(BucketOperationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BucketOperationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BucketOperationResponse* internal_default_instance() {
    return reinterpret_cast<const BucketOperationResponse*>(
               &_BucketOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(BucketOperationResponse* other);
  friend void swap(BucketOperationResponse& a, BucketOperationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BucketOperationResponse* New() const final {
    return CreateMaybeMessage<BucketOperationResponse>(NULL);
  }

  BucketOperationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BucketOperationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BucketOperationResponse& from);
  void MergeFrom(const BucketOperationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BucketOperationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bucket_name = 2;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 2;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);

  // string response_id = 3;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 3;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // .BucketOperationType operation_type = 1;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 1;
  ::BucketOperationType operation_type() const;
  void set_operation_type(::BucketOperationType value);

  // .KVSError error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::KVSError error() const;
  void set_error(::KVSError value);

  // @@protoc_insertion_point(class_scope:BucketOperationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  int operation_type_;
  int error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RerunHint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RerunHint) */ {
 public:
  RerunHint();
  virtual ~RerunHint();

  RerunHint(const RerunHint& from);

  inline RerunHint& operator=(const RerunHint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RerunHint(RerunHint&& from) noexcept
    : RerunHint() {
    *this = ::std::move(from);
  }

  inline RerunHint& operator=(RerunHint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RerunHint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RerunHint* internal_default_instance() {
    return reinterpret_cast<const RerunHint*>(
               &_RerunHint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(RerunHint* other);
  friend void swap(RerunHint& a, RerunHint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RerunHint* New() const final {
    return CreateMaybeMessage<RerunHint>(NULL);
  }

  RerunHint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RerunHint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RerunHint& from);
  void MergeFrom(const RerunHint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RerunHint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source_function = 1;
  void clear_source_function();
  static const int kSourceFunctionFieldNumber = 1;
  const ::std::string& source_function() const;
  void set_source_function(const ::std::string& value);
  #if LANG_CXX11
  void set_source_function(::std::string&& value);
  #endif
  void set_source_function(const char* value);
  void set_source_function(const char* value, size_t size);
  ::std::string* mutable_source_function();
  ::std::string* release_source_function();
  void set_allocated_source_function(::std::string* source_function);

  // string source_key = 2;
  void clear_source_key();
  static const int kSourceKeyFieldNumber = 2;
  const ::std::string& source_key() const;
  void set_source_key(const ::std::string& value);
  #if LANG_CXX11
  void set_source_key(::std::string&& value);
  #endif
  void set_source_key(const char* value);
  void set_source_key(const char* value, size_t size);
  ::std::string* mutable_source_key();
  ::std::string* release_source_key();
  void set_allocated_source_key(::std::string* source_key);

  // uint32 timeout = 3;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 3;
  ::google::protobuf::uint32 timeout() const;
  void set_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RerunHint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_function_;
  ::google::protobuf::internal::ArenaStringPtr source_key_;
  ::google::protobuf::uint32 timeout_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerOperationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TriggerOperationRequest) */ {
 public:
  TriggerOperationRequest();
  virtual ~TriggerOperationRequest();

  TriggerOperationRequest(const TriggerOperationRequest& from);

  inline TriggerOperationRequest& operator=(const TriggerOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerOperationRequest(TriggerOperationRequest&& from) noexcept
    : TriggerOperationRequest() {
    *this = ::std::move(from);
  }

  inline TriggerOperationRequest& operator=(TriggerOperationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerOperationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerOperationRequest* internal_default_instance() {
    return reinterpret_cast<const TriggerOperationRequest*>(
               &_TriggerOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(TriggerOperationRequest* other);
  friend void swap(TriggerOperationRequest& a, TriggerOperationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerOperationRequest* New() const final {
    return CreateMaybeMessage<TriggerOperationRequest>(NULL);
  }

  TriggerOperationRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerOperationRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerOperationRequest& from);
  void MergeFrom(const TriggerOperationRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerOperationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RerunHint hints = 10;
  int hints_size() const;
  void clear_hints();
  static const int kHintsFieldNumber = 10;
  ::RerunHint* mutable_hints(int index);
  ::google::protobuf::RepeatedPtrField< ::RerunHint >*
      mutable_hints();
  const ::RerunHint& hints(int index) const;
  ::RerunHint* add_hints();
  const ::google::protobuf::RepeatedPtrField< ::RerunHint >&
      hints() const;

  // string app_name = 2;
  void clear_app_name();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // string bucket_name = 3;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 3;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);

  // string trigger_name = 4;
  void clear_trigger_name();
  static const int kTriggerNameFieldNumber = 4;
  const ::std::string& trigger_name() const;
  void set_trigger_name(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_name(::std::string&& value);
  #endif
  void set_trigger_name(const char* value);
  void set_trigger_name(const char* value, size_t size);
  ::std::string* mutable_trigger_name();
  ::std::string* release_trigger_name();
  void set_allocated_trigger_name(::std::string* trigger_name);

  // bytes primitive = 7;
  void clear_primitive();
  static const int kPrimitiveFieldNumber = 7;
  const ::std::string& primitive() const;
  void set_primitive(const ::std::string& value);
  #if LANG_CXX11
  void set_primitive(::std::string&& value);
  #endif
  void set_primitive(const char* value);
  void set_primitive(const void* value, size_t size);
  ::std::string* mutable_primitive();
  ::std::string* release_primitive();
  void set_allocated_primitive(::std::string* primitive);

  // string request_id = 8;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 8;
  const ::std::string& request_id() const;
  void set_request_id(const ::std::string& value);
  #if LANG_CXX11
  void set_request_id(::std::string&& value);
  #endif
  void set_request_id(const char* value);
  void set_request_id(const char* value, size_t size);
  ::std::string* mutable_request_id();
  ::std::string* release_request_id();
  void set_allocated_request_id(::std::string* request_id);

  // string response_address = 9;
  void clear_response_address();
  static const int kResponseAddressFieldNumber = 9;
  const ::std::string& response_address() const;
  void set_response_address(const ::std::string& value);
  #if LANG_CXX11
  void set_response_address(::std::string&& value);
  #endif
  void set_response_address(const char* value);
  void set_response_address(const char* value, size_t size);
  ::std::string* mutable_response_address();
  ::std::string* release_response_address();
  void set_allocated_response_address(::std::string* response_address);

  // .TriggerOperationType operation_type = 1;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 1;
  ::TriggerOperationType operation_type() const;
  void set_operation_type(::TriggerOperationType value);

  // uint32 trigger_option = 5;
  void clear_trigger_option();
  static const int kTriggerOptionFieldNumber = 5;
  ::google::protobuf::uint32 trigger_option() const;
  void set_trigger_option(::google::protobuf::uint32 value);

  // .PrimitiveType primitive_type = 6;
  void clear_primitive_type();
  static const int kPrimitiveTypeFieldNumber = 6;
  ::PrimitiveType primitive_type() const;
  void set_primitive_type(::PrimitiveType value);

  // @@protoc_insertion_point(class_scope:TriggerOperationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RerunHint > hints_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::protobuf::internal::ArenaStringPtr trigger_name_;
  ::google::protobuf::internal::ArenaStringPtr primitive_;
  ::google::protobuf::internal::ArenaStringPtr request_id_;
  ::google::protobuf::internal::ArenaStringPtr response_address_;
  int operation_type_;
  ::google::protobuf::uint32 trigger_option_;
  int primitive_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerOperationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TriggerOperationResponse) */ {
 public:
  TriggerOperationResponse();
  virtual ~TriggerOperationResponse();

  TriggerOperationResponse(const TriggerOperationResponse& from);

  inline TriggerOperationResponse& operator=(const TriggerOperationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerOperationResponse(TriggerOperationResponse&& from) noexcept
    : TriggerOperationResponse() {
    *this = ::std::move(from);
  }

  inline TriggerOperationResponse& operator=(TriggerOperationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerOperationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerOperationResponse* internal_default_instance() {
    return reinterpret_cast<const TriggerOperationResponse*>(
               &_TriggerOperationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(TriggerOperationResponse* other);
  friend void swap(TriggerOperationResponse& a, TriggerOperationResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerOperationResponse* New() const final {
    return CreateMaybeMessage<TriggerOperationResponse>(NULL);
  }

  TriggerOperationResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerOperationResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerOperationResponse& from);
  void MergeFrom(const TriggerOperationResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerOperationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bucket_name = 2;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 2;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);

  // string trigger_name = 3;
  void clear_trigger_name();
  static const int kTriggerNameFieldNumber = 3;
  const ::std::string& trigger_name() const;
  void set_trigger_name(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_name(::std::string&& value);
  #endif
  void set_trigger_name(const char* value);
  void set_trigger_name(const char* value, size_t size);
  ::std::string* mutable_trigger_name();
  ::std::string* release_trigger_name();
  void set_allocated_trigger_name(::std::string* trigger_name);

  // string response_id = 4;
  void clear_response_id();
  static const int kResponseIdFieldNumber = 4;
  const ::std::string& response_id() const;
  void set_response_id(const ::std::string& value);
  #if LANG_CXX11
  void set_response_id(::std::string&& value);
  #endif
  void set_response_id(const char* value);
  void set_response_id(const char* value, size_t size);
  ::std::string* mutable_response_id();
  ::std::string* release_response_id();
  void set_allocated_response_id(::std::string* response_id);

  // .TriggerOperationType operation_type = 1;
  void clear_operation_type();
  static const int kOperationTypeFieldNumber = 1;
  ::TriggerOperationType operation_type() const;
  void set_operation_type(::TriggerOperationType value);

  // .KVSError error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::KVSError error() const;
  void set_error(::KVSError value);

  // @@protoc_insertion_point(class_scope:TriggerOperationResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::protobuf::internal::ArenaStringPtr trigger_name_;
  ::google::protobuf::internal::ArenaStringPtr response_id_;
  int operation_type_;
  int error_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImmediatePrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImmediatePrimitive) */ {
 public:
  ImmediatePrimitive();
  virtual ~ImmediatePrimitive();

  ImmediatePrimitive(const ImmediatePrimitive& from);

  inline ImmediatePrimitive& operator=(const ImmediatePrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImmediatePrimitive(ImmediatePrimitive&& from) noexcept
    : ImmediatePrimitive() {
    *this = ::std::move(from);
  }

  inline ImmediatePrimitive& operator=(ImmediatePrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImmediatePrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImmediatePrimitive* internal_default_instance() {
    return reinterpret_cast<const ImmediatePrimitive*>(
               &_ImmediatePrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(ImmediatePrimitive* other);
  friend void swap(ImmediatePrimitive& a, ImmediatePrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImmediatePrimitive* New() const final {
    return CreateMaybeMessage<ImmediatePrimitive>(NULL);
  }

  ImmediatePrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ImmediatePrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ImmediatePrimitive& from);
  void MergeFrom(const ImmediatePrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImmediatePrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // @@protoc_insertion_point(class_scope:ImmediatePrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByNamePrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ByNamePrimitive) */ {
 public:
  ByNamePrimitive();
  virtual ~ByNamePrimitive();

  ByNamePrimitive(const ByNamePrimitive& from);

  inline ByNamePrimitive& operator=(const ByNamePrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByNamePrimitive(ByNamePrimitive&& from) noexcept
    : ByNamePrimitive() {
    *this = ::std::move(from);
  }

  inline ByNamePrimitive& operator=(ByNamePrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByNamePrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByNamePrimitive* internal_default_instance() {
    return reinterpret_cast<const ByNamePrimitive*>(
               &_ByNamePrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(ByNamePrimitive* other);
  friend void swap(ByNamePrimitive& a, ByNamePrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByNamePrimitive* New() const final {
    return CreateMaybeMessage<ByNamePrimitive>(NULL);
  }

  ByNamePrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByNamePrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByNamePrimitive& from);
  void MergeFrom(const ByNamePrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByNamePrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // string key_name = 2;
  void clear_key_name();
  static const int kKeyNameFieldNumber = 2;
  const ::std::string& key_name() const;
  void set_key_name(const ::std::string& value);
  #if LANG_CXX11
  void set_key_name(::std::string&& value);
  #endif
  void set_key_name(const char* value);
  void set_key_name(const char* value, size_t size);
  ::std::string* mutable_key_name();
  ::std::string* release_key_name();
  void set_allocated_key_name(::std::string* key_name);

  // @@protoc_insertion_point(class_scope:ByNamePrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::internal::ArenaStringPtr key_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByBatchSizePrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ByBatchSizePrimitive) */ {
 public:
  ByBatchSizePrimitive();
  virtual ~ByBatchSizePrimitive();

  ByBatchSizePrimitive(const ByBatchSizePrimitive& from);

  inline ByBatchSizePrimitive& operator=(const ByBatchSizePrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByBatchSizePrimitive(ByBatchSizePrimitive&& from) noexcept
    : ByBatchSizePrimitive() {
    *this = ::std::move(from);
  }

  inline ByBatchSizePrimitive& operator=(ByBatchSizePrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByBatchSizePrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByBatchSizePrimitive* internal_default_instance() {
    return reinterpret_cast<const ByBatchSizePrimitive*>(
               &_ByBatchSizePrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(ByBatchSizePrimitive* other);
  friend void swap(ByBatchSizePrimitive& a, ByBatchSizePrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByBatchSizePrimitive* New() const final {
    return CreateMaybeMessage<ByBatchSizePrimitive>(NULL);
  }

  ByBatchSizePrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByBatchSizePrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByBatchSizePrimitive& from);
  void MergeFrom(const ByBatchSizePrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByBatchSizePrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ByBatchSizePrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BySetPrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BySetPrimitive) */ {
 public:
  BySetPrimitive();
  virtual ~BySetPrimitive();

  BySetPrimitive(const BySetPrimitive& from);

  inline BySetPrimitive& operator=(const BySetPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BySetPrimitive(BySetPrimitive&& from) noexcept
    : BySetPrimitive() {
    *this = ::std::move(from);
  }

  inline BySetPrimitive& operator=(BySetPrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BySetPrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BySetPrimitive* internal_default_instance() {
    return reinterpret_cast<const BySetPrimitive*>(
               &_BySetPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(BySetPrimitive* other);
  friend void swap(BySetPrimitive& a, BySetPrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BySetPrimitive* New() const final {
    return CreateMaybeMessage<BySetPrimitive>(NULL);
  }

  BySetPrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BySetPrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BySetPrimitive& from);
  void MergeFrom(const BySetPrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BySetPrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string key_set = 2;
  int key_set_size() const;
  void clear_key_set();
  static const int kKeySetFieldNumber = 2;
  const ::std::string& key_set(int index) const;
  ::std::string* mutable_key_set(int index);
  void set_key_set(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_key_set(int index, ::std::string&& value);
  #endif
  void set_key_set(int index, const char* value);
  void set_key_set(int index, const char* value, size_t size);
  ::std::string* add_key_set();
  void add_key_set(const ::std::string& value);
  #if LANG_CXX11
  void add_key_set(::std::string&& value);
  #endif
  void add_key_set(const char* value);
  void add_key_set(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key_set() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key_set();

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // @@protoc_insertion_point(class_scope:BySetPrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_set_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynamicGroupPrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DynamicGroupPrimitive) */ {
 public:
  DynamicGroupPrimitive();
  virtual ~DynamicGroupPrimitive();

  DynamicGroupPrimitive(const DynamicGroupPrimitive& from);

  inline DynamicGroupPrimitive& operator=(const DynamicGroupPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynamicGroupPrimitive(DynamicGroupPrimitive&& from) noexcept
    : DynamicGroupPrimitive() {
    *this = ::std::move(from);
  }

  inline DynamicGroupPrimitive& operator=(DynamicGroupPrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynamicGroupPrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DynamicGroupPrimitive* internal_default_instance() {
    return reinterpret_cast<const DynamicGroupPrimitive*>(
               &_DynamicGroupPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(DynamicGroupPrimitive* other);
  friend void swap(DynamicGroupPrimitive& a, DynamicGroupPrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynamicGroupPrimitive* New() const final {
    return CreateMaybeMessage<DynamicGroupPrimitive>(NULL);
  }

  DynamicGroupPrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DynamicGroupPrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DynamicGroupPrimitive& from);
  void MergeFrom(const DynamicGroupPrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynamicGroupPrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string control_group = 2;
  int control_group_size() const;
  void clear_control_group();
  static const int kControlGroupFieldNumber = 2;
  const ::std::string& control_group(int index) const;
  ::std::string* mutable_control_group(int index);
  void set_control_group(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_control_group(int index, ::std::string&& value);
  #endif
  void set_control_group(int index, const char* value);
  void set_control_group(int index, const char* value, size_t size);
  ::std::string* add_control_group();
  void add_control_group(const ::std::string& value);
  #if LANG_CXX11
  void add_control_group(::std::string&& value);
  #endif
  void add_control_group(const char* value);
  void add_control_group(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& control_group() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_control_group();

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // @@protoc_insertion_point(class_scope:DynamicGroupPrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> control_group_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedundantPrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RedundantPrimitive) */ {
 public:
  RedundantPrimitive();
  virtual ~RedundantPrimitive();

  RedundantPrimitive(const RedundantPrimitive& from);

  inline RedundantPrimitive& operator=(const RedundantPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedundantPrimitive(RedundantPrimitive&& from) noexcept
    : RedundantPrimitive() {
    *this = ::std::move(from);
  }

  inline RedundantPrimitive& operator=(RedundantPrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RedundantPrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RedundantPrimitive* internal_default_instance() {
    return reinterpret_cast<const RedundantPrimitive*>(
               &_RedundantPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(RedundantPrimitive* other);
  friend void swap(RedundantPrimitive& a, RedundantPrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedundantPrimitive* New() const final {
    return CreateMaybeMessage<RedundantPrimitive>(NULL);
  }

  RedundantPrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RedundantPrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RedundantPrimitive& from);
  void MergeFrom(const RedundantPrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RedundantPrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // uint32 k = 2;
  void clear_k();
  static const int kKFieldNumber = 2;
  ::google::protobuf::uint32 k() const;
  void set_k(::google::protobuf::uint32 value);

  // uint32 n = 3;
  void clear_n();
  static const int kNFieldNumber = 3;
  ::google::protobuf::uint32 n() const;
  void set_n(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RedundantPrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::uint32 k_;
  ::google::protobuf::uint32 n_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ByTimePrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ByTimePrimitive) */ {
 public:
  ByTimePrimitive();
  virtual ~ByTimePrimitive();

  ByTimePrimitive(const ByTimePrimitive& from);

  inline ByTimePrimitive& operator=(const ByTimePrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ByTimePrimitive(ByTimePrimitive&& from) noexcept
    : ByTimePrimitive() {
    *this = ::std::move(from);
  }

  inline ByTimePrimitive& operator=(ByTimePrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ByTimePrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ByTimePrimitive* internal_default_instance() {
    return reinterpret_cast<const ByTimePrimitive*>(
               &_ByTimePrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(ByTimePrimitive* other);
  friend void swap(ByTimePrimitive& a, ByTimePrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ByTimePrimitive* New() const final {
    return CreateMaybeMessage<ByTimePrimitive>(NULL);
  }

  ByTimePrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ByTimePrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ByTimePrimitive& from);
  void MergeFrom(const ByTimePrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ByTimePrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string function = 1;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // uint32 time_window = 2;
  void clear_time_window();
  static const int kTimeWindowFieldNumber = 2;
  ::google::protobuf::uint32 time_window() const;
  void set_time_window(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ByTimePrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::uint32 time_window_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateStatusMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateStatusMessage) */ {
 public:
  UpdateStatusMessage();
  virtual ~UpdateStatusMessage();

  UpdateStatusMessage(const UpdateStatusMessage& from);

  inline UpdateStatusMessage& operator=(const UpdateStatusMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateStatusMessage(UpdateStatusMessage&& from) noexcept
    : UpdateStatusMessage() {
    *this = ::std::move(from);
  }

  inline UpdateStatusMessage& operator=(UpdateStatusMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateStatusMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateStatusMessage* internal_default_instance() {
    return reinterpret_cast<const UpdateStatusMessage*>(
               &_UpdateStatusMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(UpdateStatusMessage* other);
  friend void swap(UpdateStatusMessage& a, UpdateStatusMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateStatusMessage* New() const final {
    return CreateMaybeMessage<UpdateStatusMessage>(NULL);
  }

  UpdateStatusMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateStatusMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateStatusMessage& from);
  void MergeFrom(const UpdateStatusMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateStatusMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string functions = 3;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 3;
  const ::std::string& functions(int index) const;
  ::std::string* mutable_functions(int index);
  void set_functions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_functions(int index, ::std::string&& value);
  #endif
  void set_functions(int index, const char* value);
  void set_functions(int index, const char* value, size_t size);
  ::std::string* add_functions();
  void add_functions(const ::std::string& value);
  #if LANG_CXX11
  void add_functions(::std::string&& value);
  #endif
  void add_functions(const char* value);
  void add_functions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& functions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_functions();

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 avail_executors = 2;
  void clear_avail_executors();
  static const int kAvailExecutorsFieldNumber = 2;
  ::google::protobuf::uint32 avail_executors() const;
  void set_avail_executors(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpdateStatusMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> functions_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 avail_executors_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TriggerEntity) */ {
 public:
  TriggerEntity();
  virtual ~TriggerEntity();

  TriggerEntity(const TriggerEntity& from);

  inline TriggerEntity& operator=(const TriggerEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerEntity(TriggerEntity&& from) noexcept
    : TriggerEntity() {
    *this = ::std::move(from);
  }

  inline TriggerEntity& operator=(TriggerEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerEntity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriggerEntity* internal_default_instance() {
    return reinterpret_cast<const TriggerEntity*>(
               &_TriggerEntity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(TriggerEntity* other);
  friend void swap(TriggerEntity& a, TriggerEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerEntity* New() const final {
    return CreateMaybeMessage<TriggerEntity>(NULL);
  }

  TriggerEntity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriggerEntity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriggerEntity& from);
  void MergeFrom(const TriggerEntity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriggerEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RerunHint hints = 7;
  int hints_size() const;
  void clear_hints();
  static const int kHintsFieldNumber = 7;
  ::RerunHint* mutable_hints(int index);
  ::google::protobuf::RepeatedPtrField< ::RerunHint >*
      mutable_hints();
  const ::RerunHint& hints(int index) const;
  ::RerunHint* add_hints();
  const ::google::protobuf::RepeatedPtrField< ::RerunHint >&
      hints() const;

  // string bucket_name = 1;
  void clear_bucket_name();
  static const int kBucketNameFieldNumber = 1;
  const ::std::string& bucket_name() const;
  void set_bucket_name(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket_name(::std::string&& value);
  #endif
  void set_bucket_name(const char* value);
  void set_bucket_name(const char* value, size_t size);
  ::std::string* mutable_bucket_name();
  ::std::string* release_bucket_name();
  void set_allocated_bucket_name(::std::string* bucket_name);

  // string trigger_name = 2;
  void clear_trigger_name();
  static const int kTriggerNameFieldNumber = 2;
  const ::std::string& trigger_name() const;
  void set_trigger_name(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_name(::std::string&& value);
  #endif
  void set_trigger_name(const char* value);
  void set_trigger_name(const char* value, size_t size);
  ::std::string* mutable_trigger_name();
  ::std::string* release_trigger_name();
  void set_allocated_trigger_name(::std::string* trigger_name);

  // bytes primitive = 5;
  void clear_primitive();
  static const int kPrimitiveFieldNumber = 5;
  const ::std::string& primitive() const;
  void set_primitive(const ::std::string& value);
  #if LANG_CXX11
  void set_primitive(::std::string&& value);
  #endif
  void set_primitive(const char* value);
  void set_primitive(const void* value, size_t size);
  ::std::string* mutable_primitive();
  ::std::string* release_primitive();
  void set_allocated_primitive(::std::string* primitive);

  // string session = 6;
  void clear_session();
  static const int kSessionFieldNumber = 6;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);

  // uint32 trigger_option = 3;
  void clear_trigger_option();
  static const int kTriggerOptionFieldNumber = 3;
  ::google::protobuf::uint32 trigger_option() const;
  void set_trigger_option(::google::protobuf::uint32 value);

  // .PrimitiveType primitive_type = 4;
  void clear_primitive_type();
  static const int kPrimitiveTypeFieldNumber = 4;
  ::PrimitiveType primitive_type() const;
  void set_primitive_type(::PrimitiveType value);

  // @@protoc_insertion_point(class_scope:TriggerEntity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RerunHint > hints_;
  ::google::protobuf::internal::ArenaStringPtr bucket_name_;
  ::google::protobuf::internal::ArenaStringPtr trigger_name_;
  ::google::protobuf::internal::ArenaStringPtr primitive_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::uint32 trigger_option_;
  int primitive_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateCoordMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateCoordMsg) */ {
 public:
  UpdateCoordMsg();
  virtual ~UpdateCoordMsg();

  UpdateCoordMsg(const UpdateCoordMsg& from);

  inline UpdateCoordMsg& operator=(const UpdateCoordMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCoordMsg(UpdateCoordMsg&& from) noexcept
    : UpdateCoordMsg() {
    *this = ::std::move(from);
  }

  inline UpdateCoordMsg& operator=(UpdateCoordMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCoordMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateCoordMsg* internal_default_instance() {
    return reinterpret_cast<const UpdateCoordMsg*>(
               &_UpdateCoordMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(UpdateCoordMsg* other);
  friend void swap(UpdateCoordMsg& a, UpdateCoordMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCoordMsg* New() const final {
    return CreateMaybeMessage<UpdateCoordMsg>(NULL);
  }

  UpdateCoordMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateCoordMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateCoordMsg& from);
  void MergeFrom(const UpdateCoordMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateCoordMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string functions = 4;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 4;
  const ::std::string& functions(int index) const;
  ::std::string* mutable_functions(int index);
  void set_functions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_functions(int index, ::std::string&& value);
  #endif
  void set_functions(int index, const char* value);
  void set_functions(int index, const char* value, size_t size);
  ::std::string* add_functions();
  void add_functions(const ::std::string& value);
  #if LANG_CXX11
  void add_functions(::std::string&& value);
  #endif
  void add_functions(const char* value);
  void add_functions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& functions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_functions();

  // repeated .DataDependency dependencies = 5;
  int dependencies_size() const;
  void clear_dependencies();
  static const int kDependenciesFieldNumber = 5;
  ::DataDependency* mutable_dependencies(int index);
  ::google::protobuf::RepeatedPtrField< ::DataDependency >*
      mutable_dependencies();
  const ::DataDependency& dependencies(int index) const;
  ::DataDependency* add_dependencies();
  const ::google::protobuf::RepeatedPtrField< ::DataDependency >&
      dependencies() const;

  // repeated .TriggerEntity triggers = 6;
  int triggers_size() const;
  void clear_triggers();
  static const int kTriggersFieldNumber = 6;
  ::TriggerEntity* mutable_triggers(int index);
  ::google::protobuf::RepeatedPtrField< ::TriggerEntity >*
      mutable_triggers();
  const ::TriggerEntity& triggers(int index) const;
  ::TriggerEntity* add_triggers();
  const ::google::protobuf::RepeatedPtrField< ::TriggerEntity >&
      triggers() const;

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string app_name = 3;
  void clear_app_name();
  static const int kAppNameFieldNumber = 3;
  const ::std::string& app_name() const;
  void set_app_name(const ::std::string& value);
  #if LANG_CXX11
  void set_app_name(::std::string&& value);
  #endif
  void set_app_name(const char* value);
  void set_app_name(const char* value, size_t size);
  ::std::string* mutable_app_name();
  ::std::string* release_app_name();
  void set_allocated_app_name(::std::string* app_name);

  // uint32 thread_id = 2;
  void clear_thread_id();
  static const int kThreadIdFieldNumber = 2;
  ::google::protobuf::uint32 thread_id() const;
  void set_thread_id(::google::protobuf::uint32 value);

  // uint32 msg_type = 7;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 7;
  ::google::protobuf::uint32 msg_type() const;
  void set_msg_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpdateCoordMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> functions_;
  ::google::protobuf::RepeatedPtrField< ::DataDependency > dependencies_;
  ::google::protobuf::RepeatedPtrField< ::TriggerEntity > triggers_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr app_name_;
  ::google::protobuf::uint32 thread_id_;
  ::google::protobuf::uint32 msg_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_operation_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Function

// string name = 1;
inline void Function::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Function::name() const {
  // @@protoc_insertion_point(field_get:Function.name)
  return name_.GetNoArena();
}
inline void Function::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Function.name)
}
#if LANG_CXX11
inline void Function::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Function.name)
}
#endif
inline void Function::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Function.name)
}
inline void Function::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Function.name)
}
inline ::std::string* Function::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Function.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Function::release_name() {
  // @@protoc_insertion_point(field_release:Function.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Function::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Function.name)
}

// .FunctionLang lang = 2;
inline void Function::clear_lang() {
  lang_ = 0;
}
inline ::FunctionLang Function::lang() const {
  // @@protoc_insertion_point(field_get:Function.lang)
  return static_cast< ::FunctionLang >(lang_);
}
inline void Function::set_lang(::FunctionLang value) {
  
  lang_ = value;
  // @@protoc_insertion_point(field_set:Function.lang)
}

// bytes body = 3;
inline void Function::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Function::body() const {
  // @@protoc_insertion_point(field_get:Function.body)
  return body_.GetNoArena();
}
inline void Function::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Function.body)
}
#if LANG_CXX11
inline void Function::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Function.body)
}
#endif
inline void Function::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Function.body)
}
inline void Function::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Function.body)
}
inline ::std::string* Function::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:Function.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Function::release_body() {
  // @@protoc_insertion_point(field_release:Function.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Function::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:Function.body)
}

// -------------------------------------------------------------------

// DataDependency

// .DependencyType type = 1;
inline void DataDependency::clear_type() {
  type_ = 0;
}
inline ::DependencyType DataDependency::type() const {
  // @@protoc_insertion_point(field_get:DataDependency.type)
  return static_cast< ::DependencyType >(type_);
}
inline void DataDependency::set_type(::DependencyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:DataDependency.type)
}

// repeated string src_functions = 2;
inline int DataDependency::src_functions_size() const {
  return src_functions_.size();
}
inline void DataDependency::clear_src_functions() {
  src_functions_.Clear();
}
inline const ::std::string& DataDependency::src_functions(int index) const {
  // @@protoc_insertion_point(field_get:DataDependency.src_functions)
  return src_functions_.Get(index);
}
inline ::std::string* DataDependency::mutable_src_functions(int index) {
  // @@protoc_insertion_point(field_mutable:DataDependency.src_functions)
  return src_functions_.Mutable(index);
}
inline void DataDependency::set_src_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DataDependency.src_functions)
  src_functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DataDependency::set_src_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DataDependency.src_functions)
  src_functions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DataDependency::set_src_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  src_functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DataDependency.src_functions)
}
inline void DataDependency::set_src_functions(int index, const char* value, size_t size) {
  src_functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DataDependency.src_functions)
}
inline ::std::string* DataDependency::add_src_functions() {
  // @@protoc_insertion_point(field_add_mutable:DataDependency.src_functions)
  return src_functions_.Add();
}
inline void DataDependency::add_src_functions(const ::std::string& value) {
  src_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DataDependency.src_functions)
}
#if LANG_CXX11
inline void DataDependency::add_src_functions(::std::string&& value) {
  src_functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DataDependency.src_functions)
}
#endif
inline void DataDependency::add_src_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  src_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DataDependency.src_functions)
}
inline void DataDependency::add_src_functions(const char* value, size_t size) {
  src_functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DataDependency.src_functions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DataDependency::src_functions() const {
  // @@protoc_insertion_point(field_list:DataDependency.src_functions)
  return src_functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DataDependency::mutable_src_functions() {
  // @@protoc_insertion_point(field_mutable_list:DataDependency.src_functions)
  return &src_functions_;
}

// repeated string tgt_functions = 3;
inline int DataDependency::tgt_functions_size() const {
  return tgt_functions_.size();
}
inline void DataDependency::clear_tgt_functions() {
  tgt_functions_.Clear();
}
inline const ::std::string& DataDependency::tgt_functions(int index) const {
  // @@protoc_insertion_point(field_get:DataDependency.tgt_functions)
  return tgt_functions_.Get(index);
}
inline ::std::string* DataDependency::mutable_tgt_functions(int index) {
  // @@protoc_insertion_point(field_mutable:DataDependency.tgt_functions)
  return tgt_functions_.Mutable(index);
}
inline void DataDependency::set_tgt_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DataDependency.tgt_functions)
  tgt_functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DataDependency::set_tgt_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DataDependency.tgt_functions)
  tgt_functions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DataDependency::set_tgt_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tgt_functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DataDependency.tgt_functions)
}
inline void DataDependency::set_tgt_functions(int index, const char* value, size_t size) {
  tgt_functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DataDependency.tgt_functions)
}
inline ::std::string* DataDependency::add_tgt_functions() {
  // @@protoc_insertion_point(field_add_mutable:DataDependency.tgt_functions)
  return tgt_functions_.Add();
}
inline void DataDependency::add_tgt_functions(const ::std::string& value) {
  tgt_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DataDependency.tgt_functions)
}
#if LANG_CXX11
inline void DataDependency::add_tgt_functions(::std::string&& value) {
  tgt_functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DataDependency.tgt_functions)
}
#endif
inline void DataDependency::add_tgt_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tgt_functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DataDependency.tgt_functions)
}
inline void DataDependency::add_tgt_functions(const char* value, size_t size) {
  tgt_functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DataDependency.tgt_functions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DataDependency::tgt_functions() const {
  // @@protoc_insertion_point(field_list:DataDependency.tgt_functions)
  return tgt_functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DataDependency::mutable_tgt_functions() {
  // @@protoc_insertion_point(field_mutable_list:DataDependency.tgt_functions)
  return &tgt_functions_;
}

// bytes description = 4;
inline void DataDependency::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataDependency::description() const {
  // @@protoc_insertion_point(field_get:DataDependency.description)
  return description_.GetNoArena();
}
inline void DataDependency::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataDependency.description)
}
#if LANG_CXX11
inline void DataDependency::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DataDependency.description)
}
#endif
inline void DataDependency::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataDependency.description)
}
inline void DataDependency::set_description(const void* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataDependency.description)
}
inline ::std::string* DataDependency::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:DataDependency.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataDependency::release_description() {
  // @@protoc_insertion_point(field_release:DataDependency.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataDependency::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:DataDependency.description)
}

// -------------------------------------------------------------------

// AppRegistration

// string app_name = 1;
inline void AppRegistration::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AppRegistration::app_name() const {
  // @@protoc_insertion_point(field_get:AppRegistration.app_name)
  return app_name_.GetNoArena();
}
inline void AppRegistration::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AppRegistration.app_name)
}
#if LANG_CXX11
inline void AppRegistration::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AppRegistration.app_name)
}
#endif
inline void AppRegistration::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AppRegistration.app_name)
}
inline void AppRegistration::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AppRegistration.app_name)
}
inline ::std::string* AppRegistration::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:AppRegistration.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppRegistration::release_app_name() {
  // @@protoc_insertion_point(field_release:AppRegistration.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppRegistration::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:AppRegistration.app_name)
}

// repeated string functions = 2;
inline int AppRegistration::functions_size() const {
  return functions_.size();
}
inline void AppRegistration::clear_functions() {
  functions_.Clear();
}
inline const ::std::string& AppRegistration::functions(int index) const {
  // @@protoc_insertion_point(field_get:AppRegistration.functions)
  return functions_.Get(index);
}
inline ::std::string* AppRegistration::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:AppRegistration.functions)
  return functions_.Mutable(index);
}
inline void AppRegistration::set_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:AppRegistration.functions)
  functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AppRegistration::set_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:AppRegistration.functions)
  functions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AppRegistration::set_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:AppRegistration.functions)
}
inline void AppRegistration::set_functions(int index, const char* value, size_t size) {
  functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AppRegistration.functions)
}
inline ::std::string* AppRegistration::add_functions() {
  // @@protoc_insertion_point(field_add_mutable:AppRegistration.functions)
  return functions_.Add();
}
inline void AppRegistration::add_functions(const ::std::string& value) {
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:AppRegistration.functions)
}
#if LANG_CXX11
inline void AppRegistration::add_functions(::std::string&& value) {
  functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:AppRegistration.functions)
}
#endif
inline void AppRegistration::add_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:AppRegistration.functions)
}
inline void AppRegistration::add_functions(const char* value, size_t size) {
  functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:AppRegistration.functions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppRegistration::functions() const {
  // @@protoc_insertion_point(field_list:AppRegistration.functions)
  return functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AppRegistration::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:AppRegistration.functions)
  return &functions_;
}

// repeated .DataDependency dependencies = 3;
inline int AppRegistration::dependencies_size() const {
  return dependencies_.size();
}
inline void AppRegistration::clear_dependencies() {
  dependencies_.Clear();
}
inline ::DataDependency* AppRegistration::mutable_dependencies(int index) {
  // @@protoc_insertion_point(field_mutable:AppRegistration.dependencies)
  return dependencies_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::DataDependency >*
AppRegistration::mutable_dependencies() {
  // @@protoc_insertion_point(field_mutable_list:AppRegistration.dependencies)
  return &dependencies_;
}
inline const ::DataDependency& AppRegistration::dependencies(int index) const {
  // @@protoc_insertion_point(field_get:AppRegistration.dependencies)
  return dependencies_.Get(index);
}
inline ::DataDependency* AppRegistration::add_dependencies() {
  // @@protoc_insertion_point(field_add:AppRegistration.dependencies)
  return dependencies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataDependency >&
AppRegistration::dependencies() const {
  // @@protoc_insertion_point(field_list:AppRegistration.dependencies)
  return dependencies_;
}

// -------------------------------------------------------------------

// Argument

// bytes body = 1;
inline void Argument::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::body() const {
  // @@protoc_insertion_point(field_get:Argument.body)
  return body_.GetNoArena();
}
inline void Argument::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Argument.body)
}
#if LANG_CXX11
inline void Argument::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Argument.body)
}
#endif
inline void Argument::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Argument.body)
}
inline void Argument::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Argument.body)
}
inline ::std::string* Argument::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:Argument.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_body() {
  // @@protoc_insertion_point(field_release:Argument.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:Argument.body)
}

// uint32 arg_flag = 2;
inline void Argument::clear_arg_flag() {
  arg_flag_ = 0u;
}
inline ::google::protobuf::uint32 Argument::arg_flag() const {
  // @@protoc_insertion_point(field_get:Argument.arg_flag)
  return arg_flag_;
}
inline void Argument::set_arg_flag(::google::protobuf::uint32 value) {
  
  arg_flag_ = value;
  // @@protoc_insertion_point(field_set:Argument.arg_flag)
}

// string data_address = 3;
inline void Argument::clear_data_address() {
  data_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::data_address() const {
  // @@protoc_insertion_point(field_get:Argument.data_address)
  return data_address_.GetNoArena();
}
inline void Argument::set_data_address(const ::std::string& value) {
  
  data_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Argument.data_address)
}
#if LANG_CXX11
inline void Argument::set_data_address(::std::string&& value) {
  
  data_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Argument.data_address)
}
#endif
inline void Argument::set_data_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Argument.data_address)
}
inline void Argument::set_data_address(const char* value, size_t size) {
  
  data_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Argument.data_address)
}
inline ::std::string* Argument::mutable_data_address() {
  
  // @@protoc_insertion_point(field_mutable:Argument.data_address)
  return data_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_data_address() {
  // @@protoc_insertion_point(field_release:Argument.data_address)
  
  return data_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_data_address(::std::string* data_address) {
  if (data_address != NULL) {
    
  } else {
    
  }
  data_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_address);
  // @@protoc_insertion_point(field_set_allocated:Argument.data_address)
}

// -------------------------------------------------------------------

// FunctionRequest

// string name = 1;
inline void FunctionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionRequest::name() const {
  // @@protoc_insertion_point(field_get:FunctionRequest.name)
  return name_.GetNoArena();
}
inline void FunctionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionRequest.name)
}
#if LANG_CXX11
inline void FunctionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionRequest.name)
}
#endif
inline void FunctionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionRequest.name)
}
inline void FunctionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionRequest.name)
}
inline ::std::string* FunctionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:FunctionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionRequest::release_name() {
  // @@protoc_insertion_point(field_release:FunctionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:FunctionRequest.name)
}

// repeated .Argument arguments = 2;
inline int FunctionRequest::arguments_size() const {
  return arguments_.size();
}
inline void FunctionRequest::clear_arguments() {
  arguments_.Clear();
}
inline ::Argument* FunctionRequest::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:FunctionRequest.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Argument >*
FunctionRequest::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:FunctionRequest.arguments)
  return &arguments_;
}
inline const ::Argument& FunctionRequest::arguments(int index) const {
  // @@protoc_insertion_point(field_get:FunctionRequest.arguments)
  return arguments_.Get(index);
}
inline ::Argument* FunctionRequest::add_arguments() {
  // @@protoc_insertion_point(field_add:FunctionRequest.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Argument >&
FunctionRequest::arguments() const {
  // @@protoc_insertion_point(field_list:FunctionRequest.arguments)
  return arguments_;
}

// -------------------------------------------------------------------

// FunctionCall

// string app_name = 1;
inline void FunctionCall::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCall::app_name() const {
  // @@protoc_insertion_point(field_get:FunctionCall.app_name)
  return app_name_.GetNoArena();
}
inline void FunctionCall::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCall.app_name)
}
#if LANG_CXX11
inline void FunctionCall::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCall.app_name)
}
#endif
inline void FunctionCall::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCall.app_name)
}
inline void FunctionCall::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCall.app_name)
}
inline ::std::string* FunctionCall::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCall.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCall::release_app_name() {
  // @@protoc_insertion_point(field_release:FunctionCall.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCall::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:FunctionCall.app_name)
}

// repeated .FunctionRequest requests = 2;
inline int FunctionCall::requests_size() const {
  return requests_.size();
}
inline void FunctionCall::clear_requests() {
  requests_.Clear();
}
inline ::FunctionRequest* FunctionCall::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:FunctionCall.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::FunctionRequest >*
FunctionCall::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:FunctionCall.requests)
  return &requests_;
}
inline const ::FunctionRequest& FunctionCall::requests(int index) const {
  // @@protoc_insertion_point(field_get:FunctionCall.requests)
  return requests_.Get(index);
}
inline ::FunctionRequest* FunctionCall::add_requests() {
  // @@protoc_insertion_point(field_add:FunctionCall.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FunctionRequest >&
FunctionCall::requests() const {
  // @@protoc_insertion_point(field_list:FunctionCall.requests)
  return requests_;
}

// string source = 3;
inline void FunctionCall::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCall::source() const {
  // @@protoc_insertion_point(field_get:FunctionCall.source)
  return source_.GetNoArena();
}
inline void FunctionCall::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCall.source)
}
#if LANG_CXX11
inline void FunctionCall::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCall.source)
}
#endif
inline void FunctionCall::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCall.source)
}
inline void FunctionCall::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCall.source)
}
inline ::std::string* FunctionCall::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCall.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCall::release_source() {
  // @@protoc_insertion_point(field_release:FunctionCall.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCall::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:FunctionCall.source)
}

// string request_id = 4;
inline void FunctionCall::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCall::request_id() const {
  // @@protoc_insertion_point(field_get:FunctionCall.request_id)
  return request_id_.GetNoArena();
}
inline void FunctionCall::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCall.request_id)
}
#if LANG_CXX11
inline void FunctionCall::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCall.request_id)
}
#endif
inline void FunctionCall::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCall.request_id)
}
inline void FunctionCall::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCall.request_id)
}
inline ::std::string* FunctionCall::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCall.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCall::release_request_id() {
  // @@protoc_insertion_point(field_release:FunctionCall.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCall::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:FunctionCall.request_id)
}

// string resp_address = 5;
inline void FunctionCall::clear_resp_address() {
  resp_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCall::resp_address() const {
  // @@protoc_insertion_point(field_get:FunctionCall.resp_address)
  return resp_address_.GetNoArena();
}
inline void FunctionCall::set_resp_address(const ::std::string& value) {
  
  resp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCall.resp_address)
}
#if LANG_CXX11
inline void FunctionCall::set_resp_address(::std::string&& value) {
  
  resp_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCall.resp_address)
}
#endif
inline void FunctionCall::set_resp_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCall.resp_address)
}
inline void FunctionCall::set_resp_address(const char* value, size_t size) {
  
  resp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCall.resp_address)
}
inline ::std::string* FunctionCall::mutable_resp_address() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCall.resp_address)
  return resp_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCall::release_resp_address() {
  // @@protoc_insertion_point(field_release:FunctionCall.resp_address)
  
  return resp_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCall::set_allocated_resp_address(::std::string* resp_address) {
  if (resp_address != NULL) {
    
  } else {
    
  }
  resp_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resp_address);
  // @@protoc_insertion_point(field_set_allocated:FunctionCall.resp_address)
}

// string session_id = 6;
inline void FunctionCall::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCall::session_id() const {
  // @@protoc_insertion_point(field_get:FunctionCall.session_id)
  return session_id_.GetNoArena();
}
inline void FunctionCall::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCall.session_id)
}
#if LANG_CXX11
inline void FunctionCall::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCall.session_id)
}
#endif
inline void FunctionCall::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCall.session_id)
}
inline void FunctionCall::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCall.session_id)
}
inline ::std::string* FunctionCall::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCall.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCall::release_session_id() {
  // @@protoc_insertion_point(field_release:FunctionCall.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCall::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:FunctionCall.session_id)
}

// bool sync_data_status = 7;
inline void FunctionCall::clear_sync_data_status() {
  sync_data_status_ = false;
}
inline bool FunctionCall::sync_data_status() const {
  // @@protoc_insertion_point(field_get:FunctionCall.sync_data_status)
  return sync_data_status_;
}
inline void FunctionCall::set_sync_data_status(bool value) {
  
  sync_data_status_ = value;
  // @@protoc_insertion_point(field_set:FunctionCall.sync_data_status)
}

// -------------------------------------------------------------------

// FunctionCallResponse

// string app_name = 1;
inline void FunctionCallResponse::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCallResponse::app_name() const {
  // @@protoc_insertion_point(field_get:FunctionCallResponse.app_name)
  return app_name_.GetNoArena();
}
inline void FunctionCallResponse::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCallResponse.app_name)
}
#if LANG_CXX11
inline void FunctionCallResponse::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCallResponse.app_name)
}
#endif
inline void FunctionCallResponse::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCallResponse.app_name)
}
inline void FunctionCallResponse::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCallResponse.app_name)
}
inline ::std::string* FunctionCallResponse::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCallResponse.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCallResponse::release_app_name() {
  // @@protoc_insertion_point(field_release:FunctionCallResponse.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCallResponse::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:FunctionCallResponse.app_name)
}

// string request_id = 2;
inline void FunctionCallResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCallResponse::request_id() const {
  // @@protoc_insertion_point(field_get:FunctionCallResponse.request_id)
  return request_id_.GetNoArena();
}
inline void FunctionCallResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCallResponse.request_id)
}
#if LANG_CXX11
inline void FunctionCallResponse::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCallResponse.request_id)
}
#endif
inline void FunctionCallResponse::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCallResponse.request_id)
}
inline void FunctionCallResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCallResponse.request_id)
}
inline ::std::string* FunctionCallResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCallResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCallResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:FunctionCallResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCallResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:FunctionCallResponse.request_id)
}

// bytes output = 3;
inline void FunctionCallResponse::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionCallResponse::output() const {
  // @@protoc_insertion_point(field_get:FunctionCallResponse.output)
  return output_.GetNoArena();
}
inline void FunctionCallResponse::set_output(const ::std::string& value) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FunctionCallResponse.output)
}
#if LANG_CXX11
inline void FunctionCallResponse::set_output(::std::string&& value) {
  
  output_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FunctionCallResponse.output)
}
#endif
inline void FunctionCallResponse::set_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FunctionCallResponse.output)
}
inline void FunctionCallResponse::set_output(const void* value, size_t size) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FunctionCallResponse.output)
}
inline ::std::string* FunctionCallResponse::mutable_output() {
  
  // @@protoc_insertion_point(field_mutable:FunctionCallResponse.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionCallResponse::release_output() {
  // @@protoc_insertion_point(field_release:FunctionCallResponse.output)
  
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionCallResponse::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    
  } else {
    
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:FunctionCallResponse.output)
}

// uint32 error_no = 4;
inline void FunctionCallResponse::clear_error_no() {
  error_no_ = 0u;
}
inline ::google::protobuf::uint32 FunctionCallResponse::error_no() const {
  // @@protoc_insertion_point(field_get:FunctionCallResponse.error_no)
  return error_no_;
}
inline void FunctionCallResponse::set_error_no(::google::protobuf::uint32 value) {
  
  error_no_ = value;
  // @@protoc_insertion_point(field_set:FunctionCallResponse.error_no)
}

// -------------------------------------------------------------------

// CoordSync

// string public_ip = 1;
inline void CoordSync::clear_public_ip() {
  public_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordSync::public_ip() const {
  // @@protoc_insertion_point(field_get:CoordSync.public_ip)
  return public_ip_.GetNoArena();
}
inline void CoordSync::set_public_ip(const ::std::string& value) {
  
  public_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordSync.public_ip)
}
#if LANG_CXX11
inline void CoordSync::set_public_ip(::std::string&& value) {
  
  public_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordSync.public_ip)
}
#endif
inline void CoordSync::set_public_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordSync.public_ip)
}
inline void CoordSync::set_public_ip(const char* value, size_t size) {
  
  public_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordSync.public_ip)
}
inline ::std::string* CoordSync::mutable_public_ip() {
  
  // @@protoc_insertion_point(field_mutable:CoordSync.public_ip)
  return public_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordSync::release_public_ip() {
  // @@protoc_insertion_point(field_release:CoordSync.public_ip)
  
  return public_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordSync::set_allocated_public_ip(::std::string* public_ip) {
  if (public_ip != NULL) {
    
  } else {
    
  }
  public_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_ip);
  // @@protoc_insertion_point(field_set_allocated:CoordSync.public_ip)
}

// string private_ip = 2;
inline void CoordSync::clear_private_ip() {
  private_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordSync::private_ip() const {
  // @@protoc_insertion_point(field_get:CoordSync.private_ip)
  return private_ip_.GetNoArena();
}
inline void CoordSync::set_private_ip(const ::std::string& value) {
  
  private_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordSync.private_ip)
}
#if LANG_CXX11
inline void CoordSync::set_private_ip(::std::string&& value) {
  
  private_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordSync.private_ip)
}
#endif
inline void CoordSync::set_private_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  private_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordSync.private_ip)
}
inline void CoordSync::set_private_ip(const char* value, size_t size) {
  
  private_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordSync.private_ip)
}
inline ::std::string* CoordSync::mutable_private_ip() {
  
  // @@protoc_insertion_point(field_mutable:CoordSync.private_ip)
  return private_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordSync::release_private_ip() {
  // @@protoc_insertion_point(field_release:CoordSync.private_ip)
  
  return private_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordSync::set_allocated_private_ip(::std::string* private_ip) {
  if (private_ip != NULL) {
    
  } else {
    
  }
  private_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), private_ip);
  // @@protoc_insertion_point(field_set_allocated:CoordSync.private_ip)
}

// uint32 thread_id = 3;
inline void CoordSync::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::google::protobuf::uint32 CoordSync::thread_id() const {
  // @@protoc_insertion_point(field_get:CoordSync.thread_id)
  return thread_id_;
}
inline void CoordSync::set_thread_id(::google::protobuf::uint32 value) {
  
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:CoordSync.thread_id)
}

// uint32 workload = 4;
inline void CoordSync::clear_workload() {
  workload_ = 0u;
}
inline ::google::protobuf::uint32 CoordSync::workload() const {
  // @@protoc_insertion_point(field_get:CoordSync.workload)
  return workload_;
}
inline void CoordSync::set_workload(::google::protobuf::uint32 value) {
  
  workload_ = value;
  // @@protoc_insertion_point(field_set:CoordSync.workload)
}

// -------------------------------------------------------------------

// CoordQuery

// string application = 1;
inline void CoordQuery::clear_application() {
  application_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordQuery::application() const {
  // @@protoc_insertion_point(field_get:CoordQuery.application)
  return application_.GetNoArena();
}
inline void CoordQuery::set_application(const ::std::string& value) {
  
  application_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordQuery.application)
}
#if LANG_CXX11
inline void CoordQuery::set_application(::std::string&& value) {
  
  application_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordQuery.application)
}
#endif
inline void CoordQuery::set_application(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  application_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordQuery.application)
}
inline void CoordQuery::set_application(const char* value, size_t size) {
  
  application_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordQuery.application)
}
inline ::std::string* CoordQuery::mutable_application() {
  
  // @@protoc_insertion_point(field_mutable:CoordQuery.application)
  return application_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordQuery::release_application() {
  // @@protoc_insertion_point(field_release:CoordQuery.application)
  
  return application_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordQuery::set_allocated_application(::std::string* application) {
  if (application != NULL) {
    
  } else {
    
  }
  application_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), application);
  // @@protoc_insertion_point(field_set_allocated:CoordQuery.application)
}

// string request_id = 2;
inline void CoordQuery::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordQuery::request_id() const {
  // @@protoc_insertion_point(field_get:CoordQuery.request_id)
  return request_id_.GetNoArena();
}
inline void CoordQuery::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordQuery.request_id)
}
#if LANG_CXX11
inline void CoordQuery::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordQuery.request_id)
}
#endif
inline void CoordQuery::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordQuery.request_id)
}
inline void CoordQuery::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordQuery.request_id)
}
inline ::std::string* CoordQuery::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:CoordQuery.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordQuery::release_request_id() {
  // @@protoc_insertion_point(field_release:CoordQuery.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordQuery::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:CoordQuery.request_id)
}

// -------------------------------------------------------------------

// CoordResponse

// string coord_ip = 1;
inline void CoordResponse::clear_coord_ip() {
  coord_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordResponse::coord_ip() const {
  // @@protoc_insertion_point(field_get:CoordResponse.coord_ip)
  return coord_ip_.GetNoArena();
}
inline void CoordResponse::set_coord_ip(const ::std::string& value) {
  
  coord_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordResponse.coord_ip)
}
#if LANG_CXX11
inline void CoordResponse::set_coord_ip(::std::string&& value) {
  
  coord_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordResponse.coord_ip)
}
#endif
inline void CoordResponse::set_coord_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  coord_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordResponse.coord_ip)
}
inline void CoordResponse::set_coord_ip(const char* value, size_t size) {
  
  coord_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordResponse.coord_ip)
}
inline ::std::string* CoordResponse::mutable_coord_ip() {
  
  // @@protoc_insertion_point(field_mutable:CoordResponse.coord_ip)
  return coord_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordResponse::release_coord_ip() {
  // @@protoc_insertion_point(field_release:CoordResponse.coord_ip)
  
  return coord_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordResponse::set_allocated_coord_ip(::std::string* coord_ip) {
  if (coord_ip != NULL) {
    
  } else {
    
  }
  coord_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coord_ip);
  // @@protoc_insertion_point(field_set_allocated:CoordResponse.coord_ip)
}

// uint32 thread_id = 2;
inline void CoordResponse::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::google::protobuf::uint32 CoordResponse::thread_id() const {
  // @@protoc_insertion_point(field_get:CoordResponse.thread_id)
  return thread_id_;
}
inline void CoordResponse::set_thread_id(::google::protobuf::uint32 value) {
  
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:CoordResponse.thread_id)
}

// string request_id = 3;
inline void CoordResponse::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CoordResponse::request_id() const {
  // @@protoc_insertion_point(field_get:CoordResponse.request_id)
  return request_id_.GetNoArena();
}
inline void CoordResponse::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CoordResponse.request_id)
}
#if LANG_CXX11
inline void CoordResponse::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CoordResponse.request_id)
}
#endif
inline void CoordResponse::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CoordResponse.request_id)
}
inline void CoordResponse::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CoordResponse.request_id)
}
inline ::std::string* CoordResponse::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:CoordResponse.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CoordResponse::release_request_id() {
  // @@protoc_insertion_point(field_release:CoordResponse.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CoordResponse::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:CoordResponse.request_id)
}

// -------------------------------------------------------------------

// BucketOperationRequest

// .BucketOperationType operation_type = 1;
inline void BucketOperationRequest::clear_operation_type() {
  operation_type_ = 0;
}
inline ::BucketOperationType BucketOperationRequest::operation_type() const {
  // @@protoc_insertion_point(field_get:BucketOperationRequest.operation_type)
  return static_cast< ::BucketOperationType >(operation_type_);
}
inline void BucketOperationRequest::set_operation_type(::BucketOperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:BucketOperationRequest.operation_type)
}

// string app_name = 2;
inline void BucketOperationRequest::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationRequest::app_name() const {
  // @@protoc_insertion_point(field_get:BucketOperationRequest.app_name)
  return app_name_.GetNoArena();
}
inline void BucketOperationRequest::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationRequest.app_name)
}
#if LANG_CXX11
inline void BucketOperationRequest::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationRequest.app_name)
}
#endif
inline void BucketOperationRequest::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationRequest.app_name)
}
inline void BucketOperationRequest::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationRequest.app_name)
}
inline ::std::string* BucketOperationRequest::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationRequest.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationRequest::release_app_name() {
  // @@protoc_insertion_point(field_release:BucketOperationRequest.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationRequest::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationRequest.app_name)
}

// string bucket_name = 3;
inline void BucketOperationRequest::clear_bucket_name() {
  bucket_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationRequest::bucket_name() const {
  // @@protoc_insertion_point(field_get:BucketOperationRequest.bucket_name)
  return bucket_name_.GetNoArena();
}
inline void BucketOperationRequest::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationRequest.bucket_name)
}
#if LANG_CXX11
inline void BucketOperationRequest::set_bucket_name(::std::string&& value) {
  
  bucket_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationRequest.bucket_name)
}
#endif
inline void BucketOperationRequest::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationRequest.bucket_name)
}
inline void BucketOperationRequest::set_bucket_name(const char* value, size_t size) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationRequest.bucket_name)
}
inline ::std::string* BucketOperationRequest::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationRequest.bucket_name)
  return bucket_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationRequest::release_bucket_name() {
  // @@protoc_insertion_point(field_release:BucketOperationRequest.bucket_name)
  
  return bucket_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationRequest::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationRequest.bucket_name)
}

// string request_id = 4;
inline void BucketOperationRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationRequest::request_id() const {
  // @@protoc_insertion_point(field_get:BucketOperationRequest.request_id)
  return request_id_.GetNoArena();
}
inline void BucketOperationRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationRequest.request_id)
}
#if LANG_CXX11
inline void BucketOperationRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationRequest.request_id)
}
#endif
inline void BucketOperationRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationRequest.request_id)
}
inline void BucketOperationRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationRequest.request_id)
}
inline ::std::string* BucketOperationRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:BucketOperationRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationRequest.request_id)
}

// string response_address = 5;
inline void BucketOperationRequest::clear_response_address() {
  response_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationRequest::response_address() const {
  // @@protoc_insertion_point(field_get:BucketOperationRequest.response_address)
  return response_address_.GetNoArena();
}
inline void BucketOperationRequest::set_response_address(const ::std::string& value) {
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationRequest.response_address)
}
#if LANG_CXX11
inline void BucketOperationRequest::set_response_address(::std::string&& value) {
  
  response_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationRequest.response_address)
}
#endif
inline void BucketOperationRequest::set_response_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationRequest.response_address)
}
inline void BucketOperationRequest::set_response_address(const char* value, size_t size) {
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationRequest.response_address)
}
inline ::std::string* BucketOperationRequest::mutable_response_address() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationRequest.response_address)
  return response_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationRequest::release_response_address() {
  // @@protoc_insertion_point(field_release:BucketOperationRequest.response_address)
  
  return response_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationRequest::set_allocated_response_address(::std::string* response_address) {
  if (response_address != NULL) {
    
  } else {
    
  }
  response_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_address);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationRequest.response_address)
}

// -------------------------------------------------------------------

// BucketOperationResponse

// .BucketOperationType operation_type = 1;
inline void BucketOperationResponse::clear_operation_type() {
  operation_type_ = 0;
}
inline ::BucketOperationType BucketOperationResponse::operation_type() const {
  // @@protoc_insertion_point(field_get:BucketOperationResponse.operation_type)
  return static_cast< ::BucketOperationType >(operation_type_);
}
inline void BucketOperationResponse::set_operation_type(::BucketOperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:BucketOperationResponse.operation_type)
}

// string bucket_name = 2;
inline void BucketOperationResponse::clear_bucket_name() {
  bucket_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationResponse::bucket_name() const {
  // @@protoc_insertion_point(field_get:BucketOperationResponse.bucket_name)
  return bucket_name_.GetNoArena();
}
inline void BucketOperationResponse::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationResponse.bucket_name)
}
#if LANG_CXX11
inline void BucketOperationResponse::set_bucket_name(::std::string&& value) {
  
  bucket_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationResponse.bucket_name)
}
#endif
inline void BucketOperationResponse::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationResponse.bucket_name)
}
inline void BucketOperationResponse::set_bucket_name(const char* value, size_t size) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationResponse.bucket_name)
}
inline ::std::string* BucketOperationResponse::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationResponse.bucket_name)
  return bucket_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationResponse::release_bucket_name() {
  // @@protoc_insertion_point(field_release:BucketOperationResponse.bucket_name)
  
  return bucket_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationResponse::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationResponse.bucket_name)
}

// string response_id = 3;
inline void BucketOperationResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BucketOperationResponse::response_id() const {
  // @@protoc_insertion_point(field_get:BucketOperationResponse.response_id)
  return response_id_.GetNoArena();
}
inline void BucketOperationResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketOperationResponse.response_id)
}
#if LANG_CXX11
inline void BucketOperationResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BucketOperationResponse.response_id)
}
#endif
inline void BucketOperationResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketOperationResponse.response_id)
}
inline void BucketOperationResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketOperationResponse.response_id)
}
inline ::std::string* BucketOperationResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:BucketOperationResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketOperationResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:BucketOperationResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketOperationResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:BucketOperationResponse.response_id)
}

// .KVSError error = 4;
inline void BucketOperationResponse::clear_error() {
  error_ = 0;
}
inline ::KVSError BucketOperationResponse::error() const {
  // @@protoc_insertion_point(field_get:BucketOperationResponse.error)
  return static_cast< ::KVSError >(error_);
}
inline void BucketOperationResponse::set_error(::KVSError value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:BucketOperationResponse.error)
}

// -------------------------------------------------------------------

// RerunHint

// string source_function = 1;
inline void RerunHint::clear_source_function() {
  source_function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RerunHint::source_function() const {
  // @@protoc_insertion_point(field_get:RerunHint.source_function)
  return source_function_.GetNoArena();
}
inline void RerunHint::set_source_function(const ::std::string& value) {
  
  source_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RerunHint.source_function)
}
#if LANG_CXX11
inline void RerunHint::set_source_function(::std::string&& value) {
  
  source_function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RerunHint.source_function)
}
#endif
inline void RerunHint::set_source_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RerunHint.source_function)
}
inline void RerunHint::set_source_function(const char* value, size_t size) {
  
  source_function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RerunHint.source_function)
}
inline ::std::string* RerunHint::mutable_source_function() {
  
  // @@protoc_insertion_point(field_mutable:RerunHint.source_function)
  return source_function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RerunHint::release_source_function() {
  // @@protoc_insertion_point(field_release:RerunHint.source_function)
  
  return source_function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RerunHint::set_allocated_source_function(::std::string* source_function) {
  if (source_function != NULL) {
    
  } else {
    
  }
  source_function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_function);
  // @@protoc_insertion_point(field_set_allocated:RerunHint.source_function)
}

// string source_key = 2;
inline void RerunHint::clear_source_key() {
  source_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RerunHint::source_key() const {
  // @@protoc_insertion_point(field_get:RerunHint.source_key)
  return source_key_.GetNoArena();
}
inline void RerunHint::set_source_key(const ::std::string& value) {
  
  source_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RerunHint.source_key)
}
#if LANG_CXX11
inline void RerunHint::set_source_key(::std::string&& value) {
  
  source_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RerunHint.source_key)
}
#endif
inline void RerunHint::set_source_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RerunHint.source_key)
}
inline void RerunHint::set_source_key(const char* value, size_t size) {
  
  source_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RerunHint.source_key)
}
inline ::std::string* RerunHint::mutable_source_key() {
  
  // @@protoc_insertion_point(field_mutable:RerunHint.source_key)
  return source_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RerunHint::release_source_key() {
  // @@protoc_insertion_point(field_release:RerunHint.source_key)
  
  return source_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RerunHint::set_allocated_source_key(::std::string* source_key) {
  if (source_key != NULL) {
    
  } else {
    
  }
  source_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_key);
  // @@protoc_insertion_point(field_set_allocated:RerunHint.source_key)
}

// uint32 timeout = 3;
inline void RerunHint::clear_timeout() {
  timeout_ = 0u;
}
inline ::google::protobuf::uint32 RerunHint::timeout() const {
  // @@protoc_insertion_point(field_get:RerunHint.timeout)
  return timeout_;
}
inline void RerunHint::set_timeout(::google::protobuf::uint32 value) {
  
  timeout_ = value;
  // @@protoc_insertion_point(field_set:RerunHint.timeout)
}

// -------------------------------------------------------------------

// TriggerOperationRequest

// .TriggerOperationType operation_type = 1;
inline void TriggerOperationRequest::clear_operation_type() {
  operation_type_ = 0;
}
inline ::TriggerOperationType TriggerOperationRequest::operation_type() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.operation_type)
  return static_cast< ::TriggerOperationType >(operation_type_);
}
inline void TriggerOperationRequest::set_operation_type(::TriggerOperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.operation_type)
}

// string app_name = 2;
inline void TriggerOperationRequest::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::app_name() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.app_name)
  return app_name_.GetNoArena();
}
inline void TriggerOperationRequest::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.app_name)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.app_name)
}
#endif
inline void TriggerOperationRequest::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.app_name)
}
inline void TriggerOperationRequest::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.app_name)
}
inline ::std::string* TriggerOperationRequest::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_app_name() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.app_name)
}

// string bucket_name = 3;
inline void TriggerOperationRequest::clear_bucket_name() {
  bucket_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::bucket_name() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.bucket_name)
  return bucket_name_.GetNoArena();
}
inline void TriggerOperationRequest::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.bucket_name)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_bucket_name(::std::string&& value) {
  
  bucket_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.bucket_name)
}
#endif
inline void TriggerOperationRequest::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.bucket_name)
}
inline void TriggerOperationRequest::set_bucket_name(const char* value, size_t size) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.bucket_name)
}
inline ::std::string* TriggerOperationRequest::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.bucket_name)
  return bucket_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_bucket_name() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.bucket_name)
  
  return bucket_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.bucket_name)
}

// string trigger_name = 4;
inline void TriggerOperationRequest::clear_trigger_name() {
  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::trigger_name() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.trigger_name)
  return trigger_name_.GetNoArena();
}
inline void TriggerOperationRequest::set_trigger_name(const ::std::string& value) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.trigger_name)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_trigger_name(::std::string&& value) {
  
  trigger_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.trigger_name)
}
#endif
inline void TriggerOperationRequest::set_trigger_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.trigger_name)
}
inline void TriggerOperationRequest::set_trigger_name(const char* value, size_t size) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.trigger_name)
}
inline ::std::string* TriggerOperationRequest::mutable_trigger_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.trigger_name)
  return trigger_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_trigger_name() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.trigger_name)
  
  return trigger_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_trigger_name(::std::string* trigger_name) {
  if (trigger_name != NULL) {
    
  } else {
    
  }
  trigger_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.trigger_name)
}

// uint32 trigger_option = 5;
inline void TriggerOperationRequest::clear_trigger_option() {
  trigger_option_ = 0u;
}
inline ::google::protobuf::uint32 TriggerOperationRequest::trigger_option() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.trigger_option)
  return trigger_option_;
}
inline void TriggerOperationRequest::set_trigger_option(::google::protobuf::uint32 value) {
  
  trigger_option_ = value;
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.trigger_option)
}

// .PrimitiveType primitive_type = 6;
inline void TriggerOperationRequest::clear_primitive_type() {
  primitive_type_ = 0;
}
inline ::PrimitiveType TriggerOperationRequest::primitive_type() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.primitive_type)
  return static_cast< ::PrimitiveType >(primitive_type_);
}
inline void TriggerOperationRequest::set_primitive_type(::PrimitiveType value) {
  
  primitive_type_ = value;
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.primitive_type)
}

// bytes primitive = 7;
inline void TriggerOperationRequest::clear_primitive() {
  primitive_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::primitive() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.primitive)
  return primitive_.GetNoArena();
}
inline void TriggerOperationRequest::set_primitive(const ::std::string& value) {
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.primitive)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_primitive(::std::string&& value) {
  
  primitive_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.primitive)
}
#endif
inline void TriggerOperationRequest::set_primitive(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.primitive)
}
inline void TriggerOperationRequest::set_primitive(const void* value, size_t size) {
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.primitive)
}
inline ::std::string* TriggerOperationRequest::mutable_primitive() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.primitive)
  return primitive_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_primitive() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.primitive)
  
  return primitive_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_primitive(::std::string* primitive) {
  if (primitive != NULL) {
    
  } else {
    
  }
  primitive_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primitive);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.primitive)
}

// string request_id = 8;
inline void TriggerOperationRequest::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::request_id() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.request_id)
  return request_id_.GetNoArena();
}
inline void TriggerOperationRequest::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.request_id)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_request_id(::std::string&& value) {
  
  request_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.request_id)
}
#endif
inline void TriggerOperationRequest::set_request_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.request_id)
}
inline void TriggerOperationRequest::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.request_id)
}
inline ::std::string* TriggerOperationRequest::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_request_id() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.request_id)
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.request_id)
}

// string response_address = 9;
inline void TriggerOperationRequest::clear_response_address() {
  response_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationRequest::response_address() const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.response_address)
  return response_address_.GetNoArena();
}
inline void TriggerOperationRequest::set_response_address(const ::std::string& value) {
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationRequest.response_address)
}
#if LANG_CXX11
inline void TriggerOperationRequest::set_response_address(::std::string&& value) {
  
  response_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationRequest.response_address)
}
#endif
inline void TriggerOperationRequest::set_response_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationRequest.response_address)
}
inline void TriggerOperationRequest::set_response_address(const char* value, size_t size) {
  
  response_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationRequest.response_address)
}
inline ::std::string* TriggerOperationRequest::mutable_response_address() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.response_address)
  return response_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationRequest::release_response_address() {
  // @@protoc_insertion_point(field_release:TriggerOperationRequest.response_address)
  
  return response_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationRequest::set_allocated_response_address(::std::string* response_address) {
  if (response_address != NULL) {
    
  } else {
    
  }
  response_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_address);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationRequest.response_address)
}

// repeated .RerunHint hints = 10;
inline int TriggerOperationRequest::hints_size() const {
  return hints_.size();
}
inline void TriggerOperationRequest::clear_hints() {
  hints_.Clear();
}
inline ::RerunHint* TriggerOperationRequest::mutable_hints(int index) {
  // @@protoc_insertion_point(field_mutable:TriggerOperationRequest.hints)
  return hints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::RerunHint >*
TriggerOperationRequest::mutable_hints() {
  // @@protoc_insertion_point(field_mutable_list:TriggerOperationRequest.hints)
  return &hints_;
}
inline const ::RerunHint& TriggerOperationRequest::hints(int index) const {
  // @@protoc_insertion_point(field_get:TriggerOperationRequest.hints)
  return hints_.Get(index);
}
inline ::RerunHint* TriggerOperationRequest::add_hints() {
  // @@protoc_insertion_point(field_add:TriggerOperationRequest.hints)
  return hints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RerunHint >&
TriggerOperationRequest::hints() const {
  // @@protoc_insertion_point(field_list:TriggerOperationRequest.hints)
  return hints_;
}

// -------------------------------------------------------------------

// TriggerOperationResponse

// .TriggerOperationType operation_type = 1;
inline void TriggerOperationResponse::clear_operation_type() {
  operation_type_ = 0;
}
inline ::TriggerOperationType TriggerOperationResponse::operation_type() const {
  // @@protoc_insertion_point(field_get:TriggerOperationResponse.operation_type)
  return static_cast< ::TriggerOperationType >(operation_type_);
}
inline void TriggerOperationResponse::set_operation_type(::TriggerOperationType value) {
  
  operation_type_ = value;
  // @@protoc_insertion_point(field_set:TriggerOperationResponse.operation_type)
}

// string bucket_name = 2;
inline void TriggerOperationResponse::clear_bucket_name() {
  bucket_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationResponse::bucket_name() const {
  // @@protoc_insertion_point(field_get:TriggerOperationResponse.bucket_name)
  return bucket_name_.GetNoArena();
}
inline void TriggerOperationResponse::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationResponse.bucket_name)
}
#if LANG_CXX11
inline void TriggerOperationResponse::set_bucket_name(::std::string&& value) {
  
  bucket_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationResponse.bucket_name)
}
#endif
inline void TriggerOperationResponse::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationResponse.bucket_name)
}
inline void TriggerOperationResponse::set_bucket_name(const char* value, size_t size) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationResponse.bucket_name)
}
inline ::std::string* TriggerOperationResponse::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationResponse.bucket_name)
  return bucket_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationResponse::release_bucket_name() {
  // @@protoc_insertion_point(field_release:TriggerOperationResponse.bucket_name)
  
  return bucket_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationResponse::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationResponse.bucket_name)
}

// string trigger_name = 3;
inline void TriggerOperationResponse::clear_trigger_name() {
  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationResponse::trigger_name() const {
  // @@protoc_insertion_point(field_get:TriggerOperationResponse.trigger_name)
  return trigger_name_.GetNoArena();
}
inline void TriggerOperationResponse::set_trigger_name(const ::std::string& value) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationResponse.trigger_name)
}
#if LANG_CXX11
inline void TriggerOperationResponse::set_trigger_name(::std::string&& value) {
  
  trigger_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationResponse.trigger_name)
}
#endif
inline void TriggerOperationResponse::set_trigger_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationResponse.trigger_name)
}
inline void TriggerOperationResponse::set_trigger_name(const char* value, size_t size) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationResponse.trigger_name)
}
inline ::std::string* TriggerOperationResponse::mutable_trigger_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationResponse.trigger_name)
  return trigger_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationResponse::release_trigger_name() {
  // @@protoc_insertion_point(field_release:TriggerOperationResponse.trigger_name)
  
  return trigger_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationResponse::set_allocated_trigger_name(::std::string* trigger_name) {
  if (trigger_name != NULL) {
    
  } else {
    
  }
  trigger_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationResponse.trigger_name)
}

// string response_id = 4;
inline void TriggerOperationResponse::clear_response_id() {
  response_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerOperationResponse::response_id() const {
  // @@protoc_insertion_point(field_get:TriggerOperationResponse.response_id)
  return response_id_.GetNoArena();
}
inline void TriggerOperationResponse::set_response_id(const ::std::string& value) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerOperationResponse.response_id)
}
#if LANG_CXX11
inline void TriggerOperationResponse::set_response_id(::std::string&& value) {
  
  response_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerOperationResponse.response_id)
}
#endif
inline void TriggerOperationResponse::set_response_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerOperationResponse.response_id)
}
inline void TriggerOperationResponse::set_response_id(const char* value, size_t size) {
  
  response_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerOperationResponse.response_id)
}
inline ::std::string* TriggerOperationResponse::mutable_response_id() {
  
  // @@protoc_insertion_point(field_mutable:TriggerOperationResponse.response_id)
  return response_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerOperationResponse::release_response_id() {
  // @@protoc_insertion_point(field_release:TriggerOperationResponse.response_id)
  
  return response_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerOperationResponse::set_allocated_response_id(::std::string* response_id) {
  if (response_id != NULL) {
    
  } else {
    
  }
  response_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_id);
  // @@protoc_insertion_point(field_set_allocated:TriggerOperationResponse.response_id)
}

// .KVSError error = 5;
inline void TriggerOperationResponse::clear_error() {
  error_ = 0;
}
inline ::KVSError TriggerOperationResponse::error() const {
  // @@protoc_insertion_point(field_get:TriggerOperationResponse.error)
  return static_cast< ::KVSError >(error_);
}
inline void TriggerOperationResponse::set_error(::KVSError value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:TriggerOperationResponse.error)
}

// -------------------------------------------------------------------

// ImmediatePrimitive

// string function = 1;
inline void ImmediatePrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImmediatePrimitive::function() const {
  // @@protoc_insertion_point(field_get:ImmediatePrimitive.function)
  return function_.GetNoArena();
}
inline void ImmediatePrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ImmediatePrimitive.function)
}
#if LANG_CXX11
inline void ImmediatePrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ImmediatePrimitive.function)
}
#endif
inline void ImmediatePrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImmediatePrimitive.function)
}
inline void ImmediatePrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImmediatePrimitive.function)
}
inline ::std::string* ImmediatePrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:ImmediatePrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImmediatePrimitive::release_function() {
  // @@protoc_insertion_point(field_release:ImmediatePrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImmediatePrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:ImmediatePrimitive.function)
}

// -------------------------------------------------------------------

// ByNamePrimitive

// string function = 1;
inline void ByNamePrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ByNamePrimitive::function() const {
  // @@protoc_insertion_point(field_get:ByNamePrimitive.function)
  return function_.GetNoArena();
}
inline void ByNamePrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ByNamePrimitive.function)
}
#if LANG_CXX11
inline void ByNamePrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ByNamePrimitive.function)
}
#endif
inline void ByNamePrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ByNamePrimitive.function)
}
inline void ByNamePrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ByNamePrimitive.function)
}
inline ::std::string* ByNamePrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:ByNamePrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ByNamePrimitive::release_function() {
  // @@protoc_insertion_point(field_release:ByNamePrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ByNamePrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:ByNamePrimitive.function)
}

// string key_name = 2;
inline void ByNamePrimitive::clear_key_name() {
  key_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ByNamePrimitive::key_name() const {
  // @@protoc_insertion_point(field_get:ByNamePrimitive.key_name)
  return key_name_.GetNoArena();
}
inline void ByNamePrimitive::set_key_name(const ::std::string& value) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ByNamePrimitive.key_name)
}
#if LANG_CXX11
inline void ByNamePrimitive::set_key_name(::std::string&& value) {
  
  key_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ByNamePrimitive.key_name)
}
#endif
inline void ByNamePrimitive::set_key_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ByNamePrimitive.key_name)
}
inline void ByNamePrimitive::set_key_name(const char* value, size_t size) {
  
  key_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ByNamePrimitive.key_name)
}
inline ::std::string* ByNamePrimitive::mutable_key_name() {
  
  // @@protoc_insertion_point(field_mutable:ByNamePrimitive.key_name)
  return key_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ByNamePrimitive::release_key_name() {
  // @@protoc_insertion_point(field_release:ByNamePrimitive.key_name)
  
  return key_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ByNamePrimitive::set_allocated_key_name(::std::string* key_name) {
  if (key_name != NULL) {
    
  } else {
    
  }
  key_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_name);
  // @@protoc_insertion_point(field_set_allocated:ByNamePrimitive.key_name)
}

// -------------------------------------------------------------------

// ByBatchSizePrimitive

// string function = 1;
inline void ByBatchSizePrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ByBatchSizePrimitive::function() const {
  // @@protoc_insertion_point(field_get:ByBatchSizePrimitive.function)
  return function_.GetNoArena();
}
inline void ByBatchSizePrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ByBatchSizePrimitive.function)
}
#if LANG_CXX11
inline void ByBatchSizePrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ByBatchSizePrimitive.function)
}
#endif
inline void ByBatchSizePrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ByBatchSizePrimitive.function)
}
inline void ByBatchSizePrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ByBatchSizePrimitive.function)
}
inline ::std::string* ByBatchSizePrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:ByBatchSizePrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ByBatchSizePrimitive::release_function() {
  // @@protoc_insertion_point(field_release:ByBatchSizePrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ByBatchSizePrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:ByBatchSizePrimitive.function)
}

// uint32 count = 2;
inline void ByBatchSizePrimitive::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ByBatchSizePrimitive::count() const {
  // @@protoc_insertion_point(field_get:ByBatchSizePrimitive.count)
  return count_;
}
inline void ByBatchSizePrimitive::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ByBatchSizePrimitive.count)
}

// -------------------------------------------------------------------

// BySetPrimitive

// string function = 1;
inline void BySetPrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BySetPrimitive::function() const {
  // @@protoc_insertion_point(field_get:BySetPrimitive.function)
  return function_.GetNoArena();
}
inline void BySetPrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BySetPrimitive.function)
}
#if LANG_CXX11
inline void BySetPrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BySetPrimitive.function)
}
#endif
inline void BySetPrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BySetPrimitive.function)
}
inline void BySetPrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BySetPrimitive.function)
}
inline ::std::string* BySetPrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:BySetPrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BySetPrimitive::release_function() {
  // @@protoc_insertion_point(field_release:BySetPrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BySetPrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:BySetPrimitive.function)
}

// repeated string key_set = 2;
inline int BySetPrimitive::key_set_size() const {
  return key_set_.size();
}
inline void BySetPrimitive::clear_key_set() {
  key_set_.Clear();
}
inline const ::std::string& BySetPrimitive::key_set(int index) const {
  // @@protoc_insertion_point(field_get:BySetPrimitive.key_set)
  return key_set_.Get(index);
}
inline ::std::string* BySetPrimitive::mutable_key_set(int index) {
  // @@protoc_insertion_point(field_mutable:BySetPrimitive.key_set)
  return key_set_.Mutable(index);
}
inline void BySetPrimitive::set_key_set(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BySetPrimitive.key_set)
  key_set_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BySetPrimitive::set_key_set(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BySetPrimitive.key_set)
  key_set_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BySetPrimitive::set_key_set(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  key_set_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BySetPrimitive.key_set)
}
inline void BySetPrimitive::set_key_set(int index, const char* value, size_t size) {
  key_set_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BySetPrimitive.key_set)
}
inline ::std::string* BySetPrimitive::add_key_set() {
  // @@protoc_insertion_point(field_add_mutable:BySetPrimitive.key_set)
  return key_set_.Add();
}
inline void BySetPrimitive::add_key_set(const ::std::string& value) {
  key_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BySetPrimitive.key_set)
}
#if LANG_CXX11
inline void BySetPrimitive::add_key_set(::std::string&& value) {
  key_set_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BySetPrimitive.key_set)
}
#endif
inline void BySetPrimitive::add_key_set(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  key_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BySetPrimitive.key_set)
}
inline void BySetPrimitive::add_key_set(const char* value, size_t size) {
  key_set_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BySetPrimitive.key_set)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BySetPrimitive::key_set() const {
  // @@protoc_insertion_point(field_list:BySetPrimitive.key_set)
  return key_set_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BySetPrimitive::mutable_key_set() {
  // @@protoc_insertion_point(field_mutable_list:BySetPrimitive.key_set)
  return &key_set_;
}

// -------------------------------------------------------------------

// DynamicGroupPrimitive

// string function = 1;
inline void DynamicGroupPrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DynamicGroupPrimitive::function() const {
  // @@protoc_insertion_point(field_get:DynamicGroupPrimitive.function)
  return function_.GetNoArena();
}
inline void DynamicGroupPrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DynamicGroupPrimitive.function)
}
#if LANG_CXX11
inline void DynamicGroupPrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DynamicGroupPrimitive.function)
}
#endif
inline void DynamicGroupPrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DynamicGroupPrimitive.function)
}
inline void DynamicGroupPrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DynamicGroupPrimitive.function)
}
inline ::std::string* DynamicGroupPrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:DynamicGroupPrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DynamicGroupPrimitive::release_function() {
  // @@protoc_insertion_point(field_release:DynamicGroupPrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DynamicGroupPrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:DynamicGroupPrimitive.function)
}

// repeated string control_group = 2;
inline int DynamicGroupPrimitive::control_group_size() const {
  return control_group_.size();
}
inline void DynamicGroupPrimitive::clear_control_group() {
  control_group_.Clear();
}
inline const ::std::string& DynamicGroupPrimitive::control_group(int index) const {
  // @@protoc_insertion_point(field_get:DynamicGroupPrimitive.control_group)
  return control_group_.Get(index);
}
inline ::std::string* DynamicGroupPrimitive::mutable_control_group(int index) {
  // @@protoc_insertion_point(field_mutable:DynamicGroupPrimitive.control_group)
  return control_group_.Mutable(index);
}
inline void DynamicGroupPrimitive::set_control_group(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DynamicGroupPrimitive.control_group)
  control_group_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DynamicGroupPrimitive::set_control_group(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DynamicGroupPrimitive.control_group)
  control_group_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DynamicGroupPrimitive::set_control_group(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  control_group_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DynamicGroupPrimitive.control_group)
}
inline void DynamicGroupPrimitive::set_control_group(int index, const char* value, size_t size) {
  control_group_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DynamicGroupPrimitive.control_group)
}
inline ::std::string* DynamicGroupPrimitive::add_control_group() {
  // @@protoc_insertion_point(field_add_mutable:DynamicGroupPrimitive.control_group)
  return control_group_.Add();
}
inline void DynamicGroupPrimitive::add_control_group(const ::std::string& value) {
  control_group_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DynamicGroupPrimitive.control_group)
}
#if LANG_CXX11
inline void DynamicGroupPrimitive::add_control_group(::std::string&& value) {
  control_group_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DynamicGroupPrimitive.control_group)
}
#endif
inline void DynamicGroupPrimitive::add_control_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  control_group_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DynamicGroupPrimitive.control_group)
}
inline void DynamicGroupPrimitive::add_control_group(const char* value, size_t size) {
  control_group_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DynamicGroupPrimitive.control_group)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DynamicGroupPrimitive::control_group() const {
  // @@protoc_insertion_point(field_list:DynamicGroupPrimitive.control_group)
  return control_group_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DynamicGroupPrimitive::mutable_control_group() {
  // @@protoc_insertion_point(field_mutable_list:DynamicGroupPrimitive.control_group)
  return &control_group_;
}

// -------------------------------------------------------------------

// RedundantPrimitive

// string function = 1;
inline void RedundantPrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RedundantPrimitive::function() const {
  // @@protoc_insertion_point(field_get:RedundantPrimitive.function)
  return function_.GetNoArena();
}
inline void RedundantPrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RedundantPrimitive.function)
}
#if LANG_CXX11
inline void RedundantPrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RedundantPrimitive.function)
}
#endif
inline void RedundantPrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RedundantPrimitive.function)
}
inline void RedundantPrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RedundantPrimitive.function)
}
inline ::std::string* RedundantPrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:RedundantPrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RedundantPrimitive::release_function() {
  // @@protoc_insertion_point(field_release:RedundantPrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RedundantPrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:RedundantPrimitive.function)
}

// uint32 k = 2;
inline void RedundantPrimitive::clear_k() {
  k_ = 0u;
}
inline ::google::protobuf::uint32 RedundantPrimitive::k() const {
  // @@protoc_insertion_point(field_get:RedundantPrimitive.k)
  return k_;
}
inline void RedundantPrimitive::set_k(::google::protobuf::uint32 value) {
  
  k_ = value;
  // @@protoc_insertion_point(field_set:RedundantPrimitive.k)
}

// uint32 n = 3;
inline void RedundantPrimitive::clear_n() {
  n_ = 0u;
}
inline ::google::protobuf::uint32 RedundantPrimitive::n() const {
  // @@protoc_insertion_point(field_get:RedundantPrimitive.n)
  return n_;
}
inline void RedundantPrimitive::set_n(::google::protobuf::uint32 value) {
  
  n_ = value;
  // @@protoc_insertion_point(field_set:RedundantPrimitive.n)
}

// -------------------------------------------------------------------

// ByTimePrimitive

// string function = 1;
inline void ByTimePrimitive::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ByTimePrimitive::function() const {
  // @@protoc_insertion_point(field_get:ByTimePrimitive.function)
  return function_.GetNoArena();
}
inline void ByTimePrimitive::set_function(const ::std::string& value) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ByTimePrimitive.function)
}
#if LANG_CXX11
inline void ByTimePrimitive::set_function(::std::string&& value) {
  
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ByTimePrimitive.function)
}
#endif
inline void ByTimePrimitive::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ByTimePrimitive.function)
}
inline void ByTimePrimitive::set_function(const char* value, size_t size) {
  
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ByTimePrimitive.function)
}
inline ::std::string* ByTimePrimitive::mutable_function() {
  
  // @@protoc_insertion_point(field_mutable:ByTimePrimitive.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ByTimePrimitive::release_function() {
  // @@protoc_insertion_point(field_release:ByTimePrimitive.function)
  
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ByTimePrimitive::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    
  } else {
    
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:ByTimePrimitive.function)
}

// uint32 time_window = 2;
inline void ByTimePrimitive::clear_time_window() {
  time_window_ = 0u;
}
inline ::google::protobuf::uint32 ByTimePrimitive::time_window() const {
  // @@protoc_insertion_point(field_get:ByTimePrimitive.time_window)
  return time_window_;
}
inline void ByTimePrimitive::set_time_window(::google::protobuf::uint32 value) {
  
  time_window_ = value;
  // @@protoc_insertion_point(field_set:ByTimePrimitive.time_window)
}

// -------------------------------------------------------------------

// UpdateStatusMessage

// string ip = 1;
inline void UpdateStatusMessage::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateStatusMessage::ip() const {
  // @@protoc_insertion_point(field_get:UpdateStatusMessage.ip)
  return ip_.GetNoArena();
}
inline void UpdateStatusMessage::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateStatusMessage.ip)
}
#if LANG_CXX11
inline void UpdateStatusMessage::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateStatusMessage.ip)
}
#endif
inline void UpdateStatusMessage::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateStatusMessage.ip)
}
inline void UpdateStatusMessage::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateStatusMessage.ip)
}
inline ::std::string* UpdateStatusMessage::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:UpdateStatusMessage.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateStatusMessage::release_ip() {
  // @@protoc_insertion_point(field_release:UpdateStatusMessage.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateStatusMessage::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:UpdateStatusMessage.ip)
}

// uint32 avail_executors = 2;
inline void UpdateStatusMessage::clear_avail_executors() {
  avail_executors_ = 0u;
}
inline ::google::protobuf::uint32 UpdateStatusMessage::avail_executors() const {
  // @@protoc_insertion_point(field_get:UpdateStatusMessage.avail_executors)
  return avail_executors_;
}
inline void UpdateStatusMessage::set_avail_executors(::google::protobuf::uint32 value) {
  
  avail_executors_ = value;
  // @@protoc_insertion_point(field_set:UpdateStatusMessage.avail_executors)
}

// repeated string functions = 3;
inline int UpdateStatusMessage::functions_size() const {
  return functions_.size();
}
inline void UpdateStatusMessage::clear_functions() {
  functions_.Clear();
}
inline const ::std::string& UpdateStatusMessage::functions(int index) const {
  // @@protoc_insertion_point(field_get:UpdateStatusMessage.functions)
  return functions_.Get(index);
}
inline ::std::string* UpdateStatusMessage::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:UpdateStatusMessage.functions)
  return functions_.Mutable(index);
}
inline void UpdateStatusMessage::set_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UpdateStatusMessage.functions)
  functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdateStatusMessage::set_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:UpdateStatusMessage.functions)
  functions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdateStatusMessage::set_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UpdateStatusMessage.functions)
}
inline void UpdateStatusMessage::set_functions(int index, const char* value, size_t size) {
  functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UpdateStatusMessage.functions)
}
inline ::std::string* UpdateStatusMessage::add_functions() {
  // @@protoc_insertion_point(field_add_mutable:UpdateStatusMessage.functions)
  return functions_.Add();
}
inline void UpdateStatusMessage::add_functions(const ::std::string& value) {
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UpdateStatusMessage.functions)
}
#if LANG_CXX11
inline void UpdateStatusMessage::add_functions(::std::string&& value) {
  functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:UpdateStatusMessage.functions)
}
#endif
inline void UpdateStatusMessage::add_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UpdateStatusMessage.functions)
}
inline void UpdateStatusMessage::add_functions(const char* value, size_t size) {
  functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UpdateStatusMessage.functions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateStatusMessage::functions() const {
  // @@protoc_insertion_point(field_list:UpdateStatusMessage.functions)
  return functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateStatusMessage::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:UpdateStatusMessage.functions)
  return &functions_;
}

// -------------------------------------------------------------------

// TriggerEntity

// string bucket_name = 1;
inline void TriggerEntity::clear_bucket_name() {
  bucket_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerEntity::bucket_name() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.bucket_name)
  return bucket_name_.GetNoArena();
}
inline void TriggerEntity::set_bucket_name(const ::std::string& value) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerEntity.bucket_name)
}
#if LANG_CXX11
inline void TriggerEntity::set_bucket_name(::std::string&& value) {
  
  bucket_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerEntity.bucket_name)
}
#endif
inline void TriggerEntity::set_bucket_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerEntity.bucket_name)
}
inline void TriggerEntity::set_bucket_name(const char* value, size_t size) {
  
  bucket_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerEntity.bucket_name)
}
inline ::std::string* TriggerEntity::mutable_bucket_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerEntity.bucket_name)
  return bucket_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerEntity::release_bucket_name() {
  // @@protoc_insertion_point(field_release:TriggerEntity.bucket_name)
  
  return bucket_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerEntity::set_allocated_bucket_name(::std::string* bucket_name) {
  if (bucket_name != NULL) {
    
  } else {
    
  }
  bucket_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerEntity.bucket_name)
}

// string trigger_name = 2;
inline void TriggerEntity::clear_trigger_name() {
  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerEntity::trigger_name() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.trigger_name)
  return trigger_name_.GetNoArena();
}
inline void TriggerEntity::set_trigger_name(const ::std::string& value) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerEntity.trigger_name)
}
#if LANG_CXX11
inline void TriggerEntity::set_trigger_name(::std::string&& value) {
  
  trigger_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerEntity.trigger_name)
}
#endif
inline void TriggerEntity::set_trigger_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerEntity.trigger_name)
}
inline void TriggerEntity::set_trigger_name(const char* value, size_t size) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerEntity.trigger_name)
}
inline ::std::string* TriggerEntity::mutable_trigger_name() {
  
  // @@protoc_insertion_point(field_mutable:TriggerEntity.trigger_name)
  return trigger_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerEntity::release_trigger_name() {
  // @@protoc_insertion_point(field_release:TriggerEntity.trigger_name)
  
  return trigger_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerEntity::set_allocated_trigger_name(::std::string* trigger_name) {
  if (trigger_name != NULL) {
    
  } else {
    
  }
  trigger_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_name);
  // @@protoc_insertion_point(field_set_allocated:TriggerEntity.trigger_name)
}

// uint32 trigger_option = 3;
inline void TriggerEntity::clear_trigger_option() {
  trigger_option_ = 0u;
}
inline ::google::protobuf::uint32 TriggerEntity::trigger_option() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.trigger_option)
  return trigger_option_;
}
inline void TriggerEntity::set_trigger_option(::google::protobuf::uint32 value) {
  
  trigger_option_ = value;
  // @@protoc_insertion_point(field_set:TriggerEntity.trigger_option)
}

// .PrimitiveType primitive_type = 4;
inline void TriggerEntity::clear_primitive_type() {
  primitive_type_ = 0;
}
inline ::PrimitiveType TriggerEntity::primitive_type() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.primitive_type)
  return static_cast< ::PrimitiveType >(primitive_type_);
}
inline void TriggerEntity::set_primitive_type(::PrimitiveType value) {
  
  primitive_type_ = value;
  // @@protoc_insertion_point(field_set:TriggerEntity.primitive_type)
}

// bytes primitive = 5;
inline void TriggerEntity::clear_primitive() {
  primitive_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerEntity::primitive() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.primitive)
  return primitive_.GetNoArena();
}
inline void TriggerEntity::set_primitive(const ::std::string& value) {
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerEntity.primitive)
}
#if LANG_CXX11
inline void TriggerEntity::set_primitive(::std::string&& value) {
  
  primitive_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerEntity.primitive)
}
#endif
inline void TriggerEntity::set_primitive(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerEntity.primitive)
}
inline void TriggerEntity::set_primitive(const void* value, size_t size) {
  
  primitive_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerEntity.primitive)
}
inline ::std::string* TriggerEntity::mutable_primitive() {
  
  // @@protoc_insertion_point(field_mutable:TriggerEntity.primitive)
  return primitive_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerEntity::release_primitive() {
  // @@protoc_insertion_point(field_release:TriggerEntity.primitive)
  
  return primitive_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerEntity::set_allocated_primitive(::std::string* primitive) {
  if (primitive != NULL) {
    
  } else {
    
  }
  primitive_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), primitive);
  // @@protoc_insertion_point(field_set_allocated:TriggerEntity.primitive)
}

// string session = 6;
inline void TriggerEntity::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerEntity::session() const {
  // @@protoc_insertion_point(field_get:TriggerEntity.session)
  return session_.GetNoArena();
}
inline void TriggerEntity::set_session(const ::std::string& value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TriggerEntity.session)
}
#if LANG_CXX11
inline void TriggerEntity::set_session(::std::string&& value) {
  
  session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TriggerEntity.session)
}
#endif
inline void TriggerEntity::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TriggerEntity.session)
}
inline void TriggerEntity::set_session(const char* value, size_t size) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TriggerEntity.session)
}
inline ::std::string* TriggerEntity::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:TriggerEntity.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerEntity::release_session() {
  // @@protoc_insertion_point(field_release:TriggerEntity.session)
  
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerEntity::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:TriggerEntity.session)
}

// repeated .RerunHint hints = 7;
inline int TriggerEntity::hints_size() const {
  return hints_.size();
}
inline void TriggerEntity::clear_hints() {
  hints_.Clear();
}
inline ::RerunHint* TriggerEntity::mutable_hints(int index) {
  // @@protoc_insertion_point(field_mutable:TriggerEntity.hints)
  return hints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::RerunHint >*
TriggerEntity::mutable_hints() {
  // @@protoc_insertion_point(field_mutable_list:TriggerEntity.hints)
  return &hints_;
}
inline const ::RerunHint& TriggerEntity::hints(int index) const {
  // @@protoc_insertion_point(field_get:TriggerEntity.hints)
  return hints_.Get(index);
}
inline ::RerunHint* TriggerEntity::add_hints() {
  // @@protoc_insertion_point(field_add:TriggerEntity.hints)
  return hints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RerunHint >&
TriggerEntity::hints() const {
  // @@protoc_insertion_point(field_list:TriggerEntity.hints)
  return hints_;
}

// -------------------------------------------------------------------

// UpdateCoordMsg

// string ip = 1;
inline void UpdateCoordMsg::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateCoordMsg::ip() const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.ip)
  return ip_.GetNoArena();
}
inline void UpdateCoordMsg::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.ip)
}
#if LANG_CXX11
inline void UpdateCoordMsg::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateCoordMsg.ip)
}
#endif
inline void UpdateCoordMsg::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateCoordMsg.ip)
}
inline void UpdateCoordMsg::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateCoordMsg.ip)
}
inline ::std::string* UpdateCoordMsg::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:UpdateCoordMsg.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateCoordMsg::release_ip() {
  // @@protoc_insertion_point(field_release:UpdateCoordMsg.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateCoordMsg::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:UpdateCoordMsg.ip)
}

// uint32 thread_id = 2;
inline void UpdateCoordMsg::clear_thread_id() {
  thread_id_ = 0u;
}
inline ::google::protobuf::uint32 UpdateCoordMsg::thread_id() const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.thread_id)
  return thread_id_;
}
inline void UpdateCoordMsg::set_thread_id(::google::protobuf::uint32 value) {
  
  thread_id_ = value;
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.thread_id)
}

// string app_name = 3;
inline void UpdateCoordMsg::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateCoordMsg::app_name() const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.app_name)
  return app_name_.GetNoArena();
}
inline void UpdateCoordMsg::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.app_name)
}
#if LANG_CXX11
inline void UpdateCoordMsg::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateCoordMsg.app_name)
}
#endif
inline void UpdateCoordMsg::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateCoordMsg.app_name)
}
inline void UpdateCoordMsg::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateCoordMsg.app_name)
}
inline ::std::string* UpdateCoordMsg::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:UpdateCoordMsg.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateCoordMsg::release_app_name() {
  // @@protoc_insertion_point(field_release:UpdateCoordMsg.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateCoordMsg::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:UpdateCoordMsg.app_name)
}

// repeated string functions = 4;
inline int UpdateCoordMsg::functions_size() const {
  return functions_.size();
}
inline void UpdateCoordMsg::clear_functions() {
  functions_.Clear();
}
inline const ::std::string& UpdateCoordMsg::functions(int index) const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.functions)
  return functions_.Get(index);
}
inline ::std::string* UpdateCoordMsg::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:UpdateCoordMsg.functions)
  return functions_.Mutable(index);
}
inline void UpdateCoordMsg::set_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.functions)
  functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UpdateCoordMsg::set_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.functions)
  functions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UpdateCoordMsg::set_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UpdateCoordMsg.functions)
}
inline void UpdateCoordMsg::set_functions(int index, const char* value, size_t size) {
  functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UpdateCoordMsg.functions)
}
inline ::std::string* UpdateCoordMsg::add_functions() {
  // @@protoc_insertion_point(field_add_mutable:UpdateCoordMsg.functions)
  return functions_.Add();
}
inline void UpdateCoordMsg::add_functions(const ::std::string& value) {
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UpdateCoordMsg.functions)
}
#if LANG_CXX11
inline void UpdateCoordMsg::add_functions(::std::string&& value) {
  functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:UpdateCoordMsg.functions)
}
#endif
inline void UpdateCoordMsg::add_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UpdateCoordMsg.functions)
}
inline void UpdateCoordMsg::add_functions(const char* value, size_t size) {
  functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UpdateCoordMsg.functions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateCoordMsg::functions() const {
  // @@protoc_insertion_point(field_list:UpdateCoordMsg.functions)
  return functions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateCoordMsg::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:UpdateCoordMsg.functions)
  return &functions_;
}

// repeated .DataDependency dependencies = 5;
inline int UpdateCoordMsg::dependencies_size() const {
  return dependencies_.size();
}
inline void UpdateCoordMsg::clear_dependencies() {
  dependencies_.Clear();
}
inline ::DataDependency* UpdateCoordMsg::mutable_dependencies(int index) {
  // @@protoc_insertion_point(field_mutable:UpdateCoordMsg.dependencies)
  return dependencies_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::DataDependency >*
UpdateCoordMsg::mutable_dependencies() {
  // @@protoc_insertion_point(field_mutable_list:UpdateCoordMsg.dependencies)
  return &dependencies_;
}
inline const ::DataDependency& UpdateCoordMsg::dependencies(int index) const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.dependencies)
  return dependencies_.Get(index);
}
inline ::DataDependency* UpdateCoordMsg::add_dependencies() {
  // @@protoc_insertion_point(field_add:UpdateCoordMsg.dependencies)
  return dependencies_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DataDependency >&
UpdateCoordMsg::dependencies() const {
  // @@protoc_insertion_point(field_list:UpdateCoordMsg.dependencies)
  return dependencies_;
}

// repeated .TriggerEntity triggers = 6;
inline int UpdateCoordMsg::triggers_size() const {
  return triggers_.size();
}
inline void UpdateCoordMsg::clear_triggers() {
  triggers_.Clear();
}
inline ::TriggerEntity* UpdateCoordMsg::mutable_triggers(int index) {
  // @@protoc_insertion_point(field_mutable:UpdateCoordMsg.triggers)
  return triggers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TriggerEntity >*
UpdateCoordMsg::mutable_triggers() {
  // @@protoc_insertion_point(field_mutable_list:UpdateCoordMsg.triggers)
  return &triggers_;
}
inline const ::TriggerEntity& UpdateCoordMsg::triggers(int index) const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.triggers)
  return triggers_.Get(index);
}
inline ::TriggerEntity* UpdateCoordMsg::add_triggers() {
  // @@protoc_insertion_point(field_add:UpdateCoordMsg.triggers)
  return triggers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TriggerEntity >&
UpdateCoordMsg::triggers() const {
  // @@protoc_insertion_point(field_list:UpdateCoordMsg.triggers)
  return triggers_;
}

// uint32 msg_type = 7;
inline void UpdateCoordMsg::clear_msg_type() {
  msg_type_ = 0u;
}
inline ::google::protobuf::uint32 UpdateCoordMsg::msg_type() const {
  // @@protoc_insertion_point(field_get:UpdateCoordMsg.msg_type)
  return msg_type_;
}
inline void UpdateCoordMsg::set_msg_type(::google::protobuf::uint32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:UpdateCoordMsg.msg_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FunctionLang> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FunctionLang>() {
  return ::FunctionLang_descriptor();
}
template <> struct is_proto_enum< ::DependencyType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DependencyType>() {
  return ::DependencyType_descriptor();
}
template <> struct is_proto_enum< ::BucketOperationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BucketOperationType>() {
  return ::BucketOperationType_descriptor();
}
template <> struct is_proto_enum< ::TriggerOperationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TriggerOperationType>() {
  return ::TriggerOperationType_descriptor();
}
template <> struct is_proto_enum< ::PrimitiveType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PrimitiveType>() {
  return ::PrimitiveType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_operation_2eproto
